/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateCsvExportRequest,
  CsvExport,
  ExportSegment,
} from '../models/index';
import {
    CreateCsvExportRequestFromJSON,
    CreateCsvExportRequestToJSON,
    CsvExportFromJSON,
    CsvExportToJSON,
    ExportSegmentFromJSON,
    ExportSegmentToJSON,
} from '../models/index';

export interface GenericExportsCreateCsvExportCreateRequest {
    createCsvExportRequest: CreateCsvExportRequest;
}

/**
 * 
 */
export class GenericExportsApi extends runtime.BaseAPI {

    /**
     */
    async genericExportsCreateCsvExportCreateRaw(requestParameters: GenericExportsCreateCsvExportCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CsvExport>> {
        if (requestParameters['createCsvExportRequest'] == null) {
            throw new runtime.RequiredError(
                'createCsvExportRequest',
                'Required parameter "createCsvExportRequest" was null or undefined when calling genericExportsCreateCsvExportCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/generic_exports/create_csv_export`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateCsvExportRequestToJSON(requestParameters['createCsvExportRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CsvExportFromJSON(jsonValue));
    }

    /**
     */
    async genericExportsCreateCsvExportCreate(requestParameters: GenericExportsCreateCsvExportCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CsvExport> {
        const response = await this.genericExportsCreateCsvExportCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async genericExportsCsvExportListListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CsvExport>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/generic_exports/csv_export_list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CsvExportFromJSON));
    }

    /**
     */
    async genericExportsCsvExportListList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CsvExport>> {
        const response = await this.genericExportsCsvExportListListRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async genericExportsExportSegmentsListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ExportSegment>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/generic_exports/export_segments`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ExportSegmentFromJSON));
    }

    /**
     */
    async genericExportsExportSegmentsList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ExportSegment>> {
        const response = await this.genericExportsExportSegmentsListRaw(initOverrides);
        return await response.value();
    }

}
