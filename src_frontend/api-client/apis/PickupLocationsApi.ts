/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PickupLocationCapacities,
} from '../models/index';
import {
    PickupLocationCapacitiesFromJSON,
    PickupLocationCapacitiesToJSON,
} from '../models/index';

export interface PickupLocationsApiPickupLocationCapacitiesRetrieveRequest {
    pickupLocationId?: string;
}

/**
 * 
 */
export class PickupLocationsApi extends runtime.BaseAPI {

    /**
     */
    async pickupLocationsApiPickupLocationCapacitiesRetrieveRaw(requestParameters: PickupLocationsApiPickupLocationCapacitiesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PickupLocationCapacities>> {
        const queryParameters: any = {};

        if (requestParameters['pickupLocationId'] != null) {
            queryParameters['pickup_location_id'] = requestParameters['pickupLocationId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/pickup_locations/api/pickup_location_capacities`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PickupLocationCapacitiesFromJSON(jsonValue));
    }

    /**
     */
    async pickupLocationsApiPickupLocationCapacitiesRetrieve(requestParameters: PickupLocationsApiPickupLocationCapacitiesRetrieveRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PickupLocationCapacities> {
        const response = await this.pickupLocationsApiPickupLocationCapacitiesRetrieveRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
