/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PaginatedWaitingListEntryList,
} from '../models/index';
import {
    PaginatedWaitingListEntryListFromJSON,
    PaginatedWaitingListEntryListToJSON,
} from '../models/index';

export interface WaitingListApiListListRequest {
    limit: number;
    offset: number;
}

/**
 * 
 */
export class WaitingListApi extends runtime.BaseAPI {

    /**
     */
    async waitingListApiListListRaw(requestParameters: WaitingListApiListListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedWaitingListEntryList>> {
        if (requestParameters['limit'] == null) {
            throw new runtime.RequiredError(
                'limit',
                'Required parameter "limit" was null or undefined when calling waitingListApiListList().'
            );
        }

        if (requestParameters['offset'] == null) {
            throw new runtime.RequiredError(
                'offset',
                'Required parameter "offset" was null or undefined when calling waitingListApiListList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/waiting_list/api/list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaginatedWaitingListEntryListFromJSON(jsonValue));
    }

    /**
     */
    async waitingListApiListList(requestParameters: WaitingListApiListListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedWaitingListEntryList> {
        const response = await this.waitingListApiListListRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
