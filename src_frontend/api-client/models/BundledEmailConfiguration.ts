/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { SegmentData } from "./SegmentData";
import { SegmentDataFromJSON, SegmentDataToJSON } from "./SegmentData";
import type { TriggerData } from "./TriggerData";
import { TriggerDataFromJSON, TriggerDataToJSON } from "./TriggerData";

/**
 *
 * @export
 * @interface BundledEmailConfiguration
 */
export interface BundledEmailConfiguration {
  /**
   *
   * @type {Array<TriggerData>}
   * @memberof BundledEmailConfiguration
   */
  triggers?: Array<TriggerData>;
  /**
   *
   * @type {string}
   * @memberof BundledEmailConfiguration
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof BundledEmailConfiguration
   */
  description?: string | null;
  /**
   *
   * @type {string}
   * @memberof BundledEmailConfiguration
   */
  content: string;
  /**
   *
   * @type {string}
   * @memberof BundledEmailConfiguration
   */
  subject?: string | null;
  /**
   *
   * @type {string}
   * @memberof BundledEmailConfiguration
   */
  releaseStatus: string;
  /**
   *
   * @type {Date}
   * @memberof BundledEmailConfiguration
   */
  updatedAt?: Date | null;
  /**
   *
   * @type {SegmentData}
   * @memberof BundledEmailConfiguration
   */
  segmentData?: SegmentData | null;
}

/**
 * Check if a given object implements the BundledEmailConfiguration interface.
 */
export function instanceOfBundledEmailConfiguration(
  value: object,
): value is BundledEmailConfiguration {
  if (!("name" in value) || value["name"] === undefined) return false;
  if (!("content" in value) || value["content"] === undefined) return false;
  if (!("releaseStatus" in value) || value["releaseStatus"] === undefined)
    return false;
  return true;
}

export function BundledEmailConfigurationFromJSON(
  json: any,
): BundledEmailConfiguration {
  return BundledEmailConfigurationFromJSONTyped(json, false);
}

export function BundledEmailConfigurationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): BundledEmailConfiguration {
  if (json == null) {
    return json;
  }
  return {
    triggers:
      json["triggers"] == null
        ? undefined
        : (json["triggers"] as Array<any>).map(TriggerDataFromJSON),
    name: json["name"],
    description: json["description"] == null ? undefined : json["description"],
    content: json["content"],
    subject: json["subject"] == null ? undefined : json["subject"],
    releaseStatus: json["release_status"],
    updatedAt:
      json["updated_at"] == null ? undefined : new Date(json["updated_at"]),
    segmentData:
      json["segment_data"] == null
        ? undefined
        : SegmentDataFromJSON(json["segment_data"]),
  };
}

export function BundledEmailConfigurationToJSON(
  json: any,
): BundledEmailConfiguration {
  return BundledEmailConfigurationToJSONTyped(json, false);
}

export function BundledEmailConfigurationToJSONTyped(
  value?: BundledEmailConfiguration | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    triggers:
      value["triggers"] == null
        ? undefined
        : (value["triggers"] as Array<any>).map(TriggerDataToJSON),
    name: value["name"],
    description: value["description"],
    content: value["content"],
    subject: value["subject"],
    release_status: value["releaseStatus"],
    updated_at:
      value["updatedAt"] == null
        ? undefined
        : (value["updatedAt"] as any).toISOString(),
    segment_data: SegmentDataToJSON(value["segmentData"]),
  };
}
