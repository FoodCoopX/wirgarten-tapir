/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatusEnum } from './StatusEnum';
import {
    StatusEnumFromJSON,
    StatusEnumFromJSONTyped,
    StatusEnumToJSON,
    StatusEnumToJSONTyped,
} from './StatusEnum';
import type { EmailConfiguration } from './EmailConfiguration';
import {
    EmailConfigurationFromJSON,
    EmailConfigurationFromJSONTyped,
    EmailConfigurationToJSON,
    EmailConfigurationToJSONTyped,
} from './EmailConfiguration';
import type { SegmentData } from './SegmentData';
import {
    SegmentDataFromJSON,
    SegmentDataFromJSONTyped,
    SegmentDataToJSON,
    SegmentDataToJSONTyped,
} from './SegmentData';
import type { TriggerData } from './TriggerData';
import {
    TriggerDataFromJSON,
    TriggerDataFromJSONTyped,
    TriggerDataToJSON,
    TriggerDataToJSONTyped,
} from './TriggerData';

/**
 * 
 * @export
 * @interface EmailConfigurationVersion
 */
export interface EmailConfigurationVersion {
    /**
     * 
     * @type {string}
     * @memberof EmailConfigurationVersion
     */
    id?: string;
    /**
     * 
     * @type {Array<TriggerData>}
     * @memberof EmailConfigurationVersion
     */
    triggers?: Array<TriggerData>;
    /**
     * 
     * @type {EmailConfiguration}
     * @memberof EmailConfigurationVersion
     */
    emailConfiguration: EmailConfiguration;
    /**
     * 
     * @type {SegmentData}
     * @memberof EmailConfigurationVersion
     */
    segmentData: SegmentData;
    /**
     * 
     * @type {boolean}
     * @memberof EmailConfigurationVersion
     */
    readonly canBeDeleted: boolean;
    /**
     * 
     * @type {Date}
     * @memberof EmailConfigurationVersion
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof EmailConfigurationVersion
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof EmailConfigurationVersion
     */
    content?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EmailConfigurationVersion
     */
    subject?: string | null;
    /**
     * 
     * @type {StatusEnum}
     * @memberof EmailConfigurationVersion
     */
    status?: StatusEnum;
}



/**
 * Check if a given object implements the EmailConfigurationVersion interface.
 */
export function instanceOfEmailConfigurationVersion(value: object): value is EmailConfigurationVersion {
    if (!('emailConfiguration' in value) || value['emailConfiguration'] === undefined) return false;
    if (!('segmentData' in value) || value['segmentData'] === undefined) return false;
    if (!('canBeDeleted' in value) || value['canBeDeleted'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function EmailConfigurationVersionFromJSON(json: any): EmailConfigurationVersion {
    return EmailConfigurationVersionFromJSONTyped(json, false);
}

export function EmailConfigurationVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailConfigurationVersion {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'triggers': json['triggers'] == null ? undefined : ((json['triggers'] as Array<any>).map(TriggerDataFromJSON)),
        'emailConfiguration': EmailConfigurationFromJSON(json['email_configuration']),
        'segmentData': SegmentDataFromJSON(json['segment_data']),
        'canBeDeleted': json['can_be_deleted'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'content': json['content'] == null ? undefined : json['content'],
        'subject': json['subject'] == null ? undefined : json['subject'],
        'status': json['status'] == null ? undefined : StatusEnumFromJSON(json['status']),
    };
}

  export function EmailConfigurationVersionToJSON(json: any): EmailConfigurationVersion {
      return EmailConfigurationVersionToJSONTyped(json, false);
  }

  export function EmailConfigurationVersionToJSONTyped(value?: Omit<EmailConfigurationVersion, 'can_be_deleted'|'created_at'|'updated_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'triggers': value['triggers'] == null ? undefined : ((value['triggers'] as Array<any>).map(TriggerDataToJSON)),
        'email_configuration': EmailConfigurationToJSON(value['emailConfiguration']),
        'segment_data': SegmentDataToJSON(value['segmentData']),
        'content': value['content'],
        'subject': value['subject'],
        'status': StatusEnumToJSON(value['status']),
    };
}

