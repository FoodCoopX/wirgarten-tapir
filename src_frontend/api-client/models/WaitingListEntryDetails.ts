/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PickupLocation } from './PickupLocation';
import {
    PickupLocationFromJSON,
    PickupLocationFromJSONTyped,
    PickupLocationToJSON,
    PickupLocationToJSONTyped,
} from './PickupLocation';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
    ProductToJSONTyped,
} from './Product';

/**
 * 
 * @export
 * @interface WaitingListEntryDetails
 */
export interface WaitingListEntryDetails {
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntryDetails
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof WaitingListEntryDetails
     */
    memberNo: number;
    /**
     * 
     * @type {Date}
     * @memberof WaitingListEntryDetails
     */
    waitingSince: Date;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntryDetails
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntryDetails
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntryDetails
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntryDetails
     */
    phoneNumber: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntryDetails
     */
    street: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntryDetails
     */
    street2: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntryDetails
     */
    postcode: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntryDetails
     */
    city: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntryDetails
     */
    country: string;
    /**
     * 
     * @type {Date}
     * @memberof WaitingListEntryDetails
     */
    dateOfEntryInCooperative?: Date;
    /**
     * 
     * @type {PickupLocation}
     * @memberof WaitingListEntryDetails
     */
    currentPickupLocation?: PickupLocation;
    /**
     * 
     * @type {Array<Product>}
     * @memberof WaitingListEntryDetails
     */
    currentProducts?: Array<Product>;
    /**
     * 
     * @type {Array<PickupLocation>}
     * @memberof WaitingListEntryDetails
     */
    pickupLocationWishes?: Array<PickupLocation>;
    /**
     * 
     * @type {Array<Product>}
     * @memberof WaitingListEntryDetails
     */
    productWishes?: Array<Product>;
    /**
     * 
     * @type {Date}
     * @memberof WaitingListEntryDetails
     */
    desiredStartDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof WaitingListEntryDetails
     */
    numberOfCoopShares: number;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntryDetails
     */
    comment: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntryDetails
     */
    category?: string;
}

/**
 * Check if a given object implements the WaitingListEntryDetails interface.
 */
export function instanceOfWaitingListEntryDetails(value: object): value is WaitingListEntryDetails {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('memberNo' in value) || value['memberNo'] === undefined) return false;
    if (!('waitingSince' in value) || value['waitingSince'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('phoneNumber' in value) || value['phoneNumber'] === undefined) return false;
    if (!('street' in value) || value['street'] === undefined) return false;
    if (!('street2' in value) || value['street2'] === undefined) return false;
    if (!('postcode' in value) || value['postcode'] === undefined) return false;
    if (!('city' in value) || value['city'] === undefined) return false;
    if (!('country' in value) || value['country'] === undefined) return false;
    if (!('numberOfCoopShares' in value) || value['numberOfCoopShares'] === undefined) return false;
    if (!('comment' in value) || value['comment'] === undefined) return false;
    return true;
}

export function WaitingListEntryDetailsFromJSON(json: any): WaitingListEntryDetails {
    return WaitingListEntryDetailsFromJSONTyped(json, false);
}

export function WaitingListEntryDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): WaitingListEntryDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'memberNo': json['member_no'],
        'waitingSince': (new Date(json['waiting_since'])),
        'firstName': json['first_name'],
        'lastName': json['last_name'],
        'email': json['email'],
        'phoneNumber': json['phone_number'],
        'street': json['street'],
        'street2': json['street_2'],
        'postcode': json['postcode'],
        'city': json['city'],
        'country': json['country'],
        'dateOfEntryInCooperative': json['date_of_entry_in_cooperative'] == null ? undefined : (new Date(json['date_of_entry_in_cooperative'])),
        'currentPickupLocation': json['current_pickup_location'] == null ? undefined : PickupLocationFromJSON(json['current_pickup_location']),
        'currentProducts': json['current_products'] == null ? undefined : ((json['current_products'] as Array<any>).map(ProductFromJSON)),
        'pickupLocationWishes': json['pickup_location_wishes'] == null ? undefined : ((json['pickup_location_wishes'] as Array<any>).map(PickupLocationFromJSON)),
        'productWishes': json['product_wishes'] == null ? undefined : ((json['product_wishes'] as Array<any>).map(ProductFromJSON)),
        'desiredStartDate': json['desired_start_date'] == null ? undefined : (new Date(json['desired_start_date'])),
        'numberOfCoopShares': json['number_of_coop_shares'],
        'comment': json['comment'],
        'category': json['category'] == null ? undefined : json['category'],
    };
}

  export function WaitingListEntryDetailsToJSON(json: any): WaitingListEntryDetails {
      return WaitingListEntryDetailsToJSONTyped(json, false);
  }

  export function WaitingListEntryDetailsToJSONTyped(value?: WaitingListEntryDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'member_no': value['memberNo'],
        'waiting_since': ((value['waitingSince']).toISOString()),
        'first_name': value['firstName'],
        'last_name': value['lastName'],
        'email': value['email'],
        'phone_number': value['phoneNumber'],
        'street': value['street'],
        'street_2': value['street2'],
        'postcode': value['postcode'],
        'city': value['city'],
        'country': value['country'],
        'date_of_entry_in_cooperative': value['dateOfEntryInCooperative'] == null ? undefined : ((value['dateOfEntryInCooperative']).toISOString().substring(0,10)),
        'current_pickup_location': PickupLocationToJSON(value['currentPickupLocation']),
        'current_products': value['currentProducts'] == null ? undefined : ((value['currentProducts'] as Array<any>).map(ProductToJSON)),
        'pickup_location_wishes': value['pickupLocationWishes'] == null ? undefined : ((value['pickupLocationWishes'] as Array<any>).map(PickupLocationToJSON)),
        'product_wishes': value['productWishes'] == null ? undefined : ((value['productWishes'] as Array<any>).map(ProductToJSON)),
        'desired_start_date': value['desiredStartDate'] == null ? undefined : ((value['desiredStartDate']).toISOString().substring(0,10)),
        'number_of_coop_shares': value['numberOfCoopShares'],
        'comment': value['comment'],
        'category': value['category'],
    };
}

