/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExtendedProductType } from './ExtendedProductType';
import {
    ExtendedProductTypeFromJSON,
    ExtendedProductTypeFromJSONTyped,
    ExtendedProductTypeToJSON,
    ExtendedProductTypeToJSONTyped,
} from './ExtendedProductType';

/**
 * 
 * @export
 * @interface ExtendedProductTypeAndConfig
 */
export interface ExtendedProductTypeAndConfig {
    /**
     * 
     * @type {boolean}
     * @memberof ExtendedProductTypeAndConfig
     */
    showNoticePeriod: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ExtendedProductTypeAndConfig
     */
    showJokers: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ExtendedProductTypeAndConfig
     */
    showAssociationMembership: boolean;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ExtendedProductTypeAndConfig
     */
    deliveryCycleOptions: { [key: string]: any; };
    /**
     * 
     * @type {ExtendedProductType}
     * @memberof ExtendedProductTypeAndConfig
     */
    extendedProductType: ExtendedProductType;
}

/**
 * Check if a given object implements the ExtendedProductTypeAndConfig interface.
 */
export function instanceOfExtendedProductTypeAndConfig(value: object): value is ExtendedProductTypeAndConfig {
    if (!('showNoticePeriod' in value) || value['showNoticePeriod'] === undefined) return false;
    if (!('showJokers' in value) || value['showJokers'] === undefined) return false;
    if (!('showAssociationMembership' in value) || value['showAssociationMembership'] === undefined) return false;
    if (!('deliveryCycleOptions' in value) || value['deliveryCycleOptions'] === undefined) return false;
    if (!('extendedProductType' in value) || value['extendedProductType'] === undefined) return false;
    return true;
}

export function ExtendedProductTypeAndConfigFromJSON(json: any): ExtendedProductTypeAndConfig {
    return ExtendedProductTypeAndConfigFromJSONTyped(json, false);
}

export function ExtendedProductTypeAndConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExtendedProductTypeAndConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'showNoticePeriod': json['show_notice_period'],
        'showJokers': json['show_jokers'],
        'showAssociationMembership': json['show_association_membership'],
        'deliveryCycleOptions': json['delivery_cycle_options'],
        'extendedProductType': ExtendedProductTypeFromJSON(json['extended_product_type']),
    };
}

  export function ExtendedProductTypeAndConfigToJSON(json: any): ExtendedProductTypeAndConfig {
      return ExtendedProductTypeAndConfigToJSONTyped(json, false);
  }

  export function ExtendedProductTypeAndConfigToJSONTyped(value?: ExtendedProductTypeAndConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'show_notice_period': value['showNoticePeriod'],
        'show_jokers': value['showJokers'],
        'show_association_membership': value['showAssociationMembership'],
        'delivery_cycle_options': value['deliveryCycleOptions'],
        'extended_product_type': ExtendedProductTypeToJSON(value['extendedProductType']),
    };
}

