/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PublicProduct } from './PublicProduct';
import {
    PublicProductFromJSON,
    PublicProductFromJSONTyped,
    PublicProductToJSON,
    PublicProductToJSONTyped,
} from './PublicProduct';

/**
 * 
 * @export
 * @interface PublicProductType
 */
export interface PublicProductType {
    /**
     * 
     * @type {string}
     * @memberof PublicProductType
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PublicProductType
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PublicProductType
     */
    descriptionBestellwizardShort?: string;
    /**
     * 
     * @type {string}
     * @memberof PublicProductType
     */
    descriptionBestellwizardLong?: string;
    /**
     * 
     * @type {Array<PublicProduct>}
     * @memberof PublicProductType
     */
    readonly products: Array<PublicProduct>;
    /**
     * 
     * @type {number}
     * @memberof PublicProductType
     */
    orderInBestellwizard?: number;
}

/**
 * Check if a given object implements the PublicProductType interface.
 */
export function instanceOfPublicProductType(value: object): value is PublicProductType {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('products' in value) || value['products'] === undefined) return false;
    return true;
}

export function PublicProductTypeFromJSON(json: any): PublicProductType {
    return PublicProductTypeFromJSONTyped(json, false);
}

export function PublicProductTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicProductType {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'descriptionBestellwizardShort': json['description_bestellwizard_short'] == null ? undefined : json['description_bestellwizard_short'],
        'descriptionBestellwizardLong': json['description_bestellwizard_long'] == null ? undefined : json['description_bestellwizard_long'],
        'products': ((json['products'] as Array<any>).map(PublicProductFromJSON)),
        'orderInBestellwizard': json['order_in_bestellwizard'] == null ? undefined : json['order_in_bestellwizard'],
    };
}

  export function PublicProductTypeToJSON(json: any): PublicProductType {
      return PublicProductTypeToJSONTyped(json, false);
  }

  export function PublicProductTypeToJSONTyped(value?: Omit<PublicProductType, 'products'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description_bestellwizard_short': value['descriptionBestellwizardShort'],
        'description_bestellwizard_long': value['descriptionBestellwizardLong'],
        'order_in_bestellwizard': value['orderInBestellwizard'],
    };
}

