/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PickupLocation
 */
export interface PickupLocation {
  /**
   *
   * @type {string}
   * @memberof PickupLocation
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof PickupLocation
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof PickupLocation
   */
  coordsLon: string;
  /**
   *
   * @type {string}
   * @memberof PickupLocation
   */
  coordsLat: string;
  /**
   *
   * @type {string}
   * @memberof PickupLocation
   */
  street: string;
  /**
   *
   * @type {string}
   * @memberof PickupLocation
   */
  street2?: string;
  /**
   *
   * @type {string}
   * @memberof PickupLocation
   */
  postcode: string;
  /**
   *
   * @type {string}
   * @memberof PickupLocation
   */
  city: string;
  /**
   *
   * @type {string}
   * @memberof PickupLocation
   */
  info?: string;
  /**
   *
   * @type {string}
   * @memberof PickupLocation
   */
  accessCode?: string;
  /**
   *
   * @type {string}
   * @memberof PickupLocation
   */
  messengerGroupLink?: string;
  /**
   *
   * @type {string}
   * @memberof PickupLocation
   */
  contactName?: string;
  /**
   *
   * @type {string}
   * @memberof PickupLocation
   */
  photoLink?: string;
}

/**
 * Check if a given object implements the PickupLocation interface.
 */
export function instanceOfPickupLocation(
  value: object,
): value is PickupLocation {
  if (!("name" in value) || value["name"] === undefined) return false;
  if (!("coordsLon" in value) || value["coordsLon"] === undefined) return false;
  if (!("coordsLat" in value) || value["coordsLat"] === undefined) return false;
  if (!("street" in value) || value["street"] === undefined) return false;
  if (!("postcode" in value) || value["postcode"] === undefined) return false;
  if (!("city" in value) || value["city"] === undefined) return false;
  return true;
}

export function PickupLocationFromJSON(json: any): PickupLocation {
  return PickupLocationFromJSONTyped(json, false);
}

export function PickupLocationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PickupLocation {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    name: json["name"],
    coordsLon: json["coords_lon"],
    coordsLat: json["coords_lat"],
    street: json["street"],
    street2: json["street_2"] == null ? undefined : json["street_2"],
    postcode: json["postcode"],
    city: json["city"],
    info: json["info"] == null ? undefined : json["info"],
    accessCode: json["access_code"] == null ? undefined : json["access_code"],
    messengerGroupLink:
      json["messenger_group_link"] == null
        ? undefined
        : json["messenger_group_link"],
    contactName:
      json["contact_name"] == null ? undefined : json["contact_name"],
    photoLink: json["photo_link"] == null ? undefined : json["photo_link"],
  };
}

export function PickupLocationToJSON(json: any): PickupLocation {
  return PickupLocationToJSONTyped(json, false);
}

export function PickupLocationToJSONTyped(
  value?: PickupLocation | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    name: value["name"],
    coords_lon: value["coordsLon"],
    coords_lat: value["coordsLat"],
    street: value["street"],
    street_2: value["street2"],
    postcode: value["postcode"],
    city: value["city"],
    info: value["info"],
    access_code: value["accessCode"],
    messenger_group_link: value["messengerGroupLink"],
    contact_name: value["contactName"],
    photo_link: value["photoLink"],
  };
}
