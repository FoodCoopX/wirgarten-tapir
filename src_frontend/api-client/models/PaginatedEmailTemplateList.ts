/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { EmailTemplate } from "./EmailTemplate";
import { EmailTemplateFromJSON, EmailTemplateToJSON } from "./EmailTemplate";

/**
 *
 * @export
 * @interface PaginatedEmailTemplateList
 */
export interface PaginatedEmailTemplateList {
  /**
   *
   * @type {number}
   * @memberof PaginatedEmailTemplateList
   */
  count: number;
  /**
   *
   * @type {string}
   * @memberof PaginatedEmailTemplateList
   */
  next?: string | null;
  /**
   *
   * @type {string}
   * @memberof PaginatedEmailTemplateList
   */
  previous?: string | null;
  /**
   *
   * @type {Array<EmailTemplate>}
   * @memberof PaginatedEmailTemplateList
   */
  results: Array<EmailTemplate>;
}

/**
 * Check if a given object implements the PaginatedEmailTemplateList interface.
 */
export function instanceOfPaginatedEmailTemplateList(
  value: object,
): value is PaginatedEmailTemplateList {
  if (!("count" in value) || value["count"] === undefined) return false;
  if (!("results" in value) || value["results"] === undefined) return false;
  return true;
}

export function PaginatedEmailTemplateListFromJSON(
  json: any,
): PaginatedEmailTemplateList {
  return PaginatedEmailTemplateListFromJSONTyped(json, false);
}

export function PaginatedEmailTemplateListFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PaginatedEmailTemplateList {
  if (json == null) {
    return json;
  }
  return {
    count: json["count"],
    next: json["next"] == null ? undefined : json["next"],
    previous: json["previous"] == null ? undefined : json["previous"],
    results: (json["results"] as Array<any>).map(EmailTemplateFromJSON),
  };
}

export function PaginatedEmailTemplateListToJSON(
  json: any,
): PaginatedEmailTemplateList {
  return PaginatedEmailTemplateListToJSONTyped(json, false);
}

export function PaginatedEmailTemplateListToJSONTyped(
  value?: PaginatedEmailTemplateList | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    count: value["count"],
    next: value["next"],
    previous: value["previous"],
    results: (value["results"] as Array<any>).map(EmailTemplateToJSON),
  };
}
