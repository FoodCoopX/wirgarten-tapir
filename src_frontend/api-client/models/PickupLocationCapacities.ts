/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { PickupLocationCapacityByBasketSize } from "./PickupLocationCapacityByBasketSize";
import {
  PickupLocationCapacityByBasketSizeFromJSON,
  PickupLocationCapacityByBasketSizeToJSON,
} from "./PickupLocationCapacityByBasketSize";
import type { PickingModeEnum } from "./PickingModeEnum";
import {
  PickingModeEnumFromJSON,
  PickingModeEnumToJSON,
} from "./PickingModeEnum";
import type { PickupLocationCapacityByShare } from "./PickupLocationCapacityByShare";
import {
  PickupLocationCapacityByShareFromJSON,
  PickupLocationCapacityByShareToJSON,
} from "./PickupLocationCapacityByShare";

/**
 *
 * @export
 * @interface PickupLocationCapacities
 */
export interface PickupLocationCapacities {
  /**
   *
   * @type {PickingModeEnum}
   * @memberof PickupLocationCapacities
   */
  pickingMode: PickingModeEnum;
  /**
   *
   * @type {string}
   * @memberof PickupLocationCapacities
   */
  pickupLocationId: string;
  /**
   *
   * @type {string}
   * @memberof PickupLocationCapacities
   */
  pickupLocationName: string;
  /**
   *
   * @type {Array<PickupLocationCapacityByShare>}
   * @memberof PickupLocationCapacities
   */
  capacitiesByShares?: Array<PickupLocationCapacityByShare>;
  /**
   *
   * @type {Array<PickupLocationCapacityByBasketSize>}
   * @memberof PickupLocationCapacities
   */
  capacitiesByBasketSize?: Array<PickupLocationCapacityByBasketSize>;
}

/**
 * Check if a given object implements the PickupLocationCapacities interface.
 */
export function instanceOfPickupLocationCapacities(
  value: object,
): value is PickupLocationCapacities {
  if (!("pickingMode" in value) || value["pickingMode"] === undefined)
    return false;
  if (!("pickupLocationId" in value) || value["pickupLocationId"] === undefined)
    return false;
  if (
    !("pickupLocationName" in value) ||
    value["pickupLocationName"] === undefined
  )
    return false;
  return true;
}

export function PickupLocationCapacitiesFromJSON(
  json: any,
): PickupLocationCapacities {
  return PickupLocationCapacitiesFromJSONTyped(json, false);
}

export function PickupLocationCapacitiesFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PickupLocationCapacities {
  if (json == null) {
    return json;
  }
  return {
    pickingMode: PickingModeEnumFromJSON(json["picking_mode"]),
    pickupLocationId: json["pickup_location_id"],
    pickupLocationName: json["pickup_location_name"],
    capacitiesByShares:
      json["capacities_by_shares"] == null
        ? undefined
        : (json["capacities_by_shares"] as Array<any>).map(
            PickupLocationCapacityByShareFromJSON,
          ),
    capacitiesByBasketSize:
      json["capacities_by_basket_size"] == null
        ? undefined
        : (json["capacities_by_basket_size"] as Array<any>).map(
            PickupLocationCapacityByBasketSizeFromJSON,
          ),
  };
}

export function PickupLocationCapacitiesToJSON(
  json: any,
): PickupLocationCapacities {
  return PickupLocationCapacitiesToJSONTyped(json, false);
}

export function PickupLocationCapacitiesToJSONTyped(
  value?: PickupLocationCapacities | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    picking_mode: PickingModeEnumToJSON(value["pickingMode"]),
    pickup_location_id: value["pickupLocationId"],
    pickup_location_name: value["pickupLocationName"],
    capacities_by_shares:
      value["capacitiesByShares"] == null
        ? undefined
        : (value["capacitiesByShares"] as Array<any>).map(
            PickupLocationCapacityByShareToJSON,
          ),
    capacities_by_basket_size:
      value["capacitiesByBasketSize"] == null
        ? undefined
        : (value["capacitiesByBasketSize"] as Array<any>).map(
            PickupLocationCapacityByBasketSizeToJSON,
          ),
  };
}
