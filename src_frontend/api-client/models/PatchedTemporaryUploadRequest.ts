/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UploadTypeEnum } from './UploadTypeEnum';
import {
    UploadTypeEnumFromJSON,
    UploadTypeEnumFromJSONTyped,
    UploadTypeEnumToJSON,
    UploadTypeEnumToJSONTyped,
} from './UploadTypeEnum';

/**
 * 
 * @export
 * @interface PatchedTemporaryUploadRequest
 */
export interface PatchedTemporaryUploadRequest {
    /**
     * 
     * @type {string}
     * @memberof PatchedTemporaryUploadRequest
     */
    uploadId?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedTemporaryUploadRequest
     */
    fileName?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedTemporaryUploadRequest
     */
    fileId?: string;
    /**
     * 
     * @type {Blob}
     * @memberof PatchedTemporaryUploadRequest
     */
    file?: Blob;
    /**
     * 
     * @type {string}
     * @memberof PatchedTemporaryUploadRequest
     */
    uploadName?: string;
    /**
     * 
     * @type {UploadTypeEnum}
     * @memberof PatchedTemporaryUploadRequest
     */
    uploadType?: UploadTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PatchedTemporaryUploadRequest
     */
    uploadedBy?: string | null;
}



/**
 * Check if a given object implements the PatchedTemporaryUploadRequest interface.
 */
export function instanceOfPatchedTemporaryUploadRequest(value: object): value is PatchedTemporaryUploadRequest {
    return true;
}

export function PatchedTemporaryUploadRequestFromJSON(json: any): PatchedTemporaryUploadRequest {
    return PatchedTemporaryUploadRequestFromJSONTyped(json, false);
}

export function PatchedTemporaryUploadRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedTemporaryUploadRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'uploadId': json['upload_id'] == null ? undefined : json['upload_id'],
        'fileName': json['file_name'] == null ? undefined : json['file_name'],
        'fileId': json['file_id'] == null ? undefined : json['file_id'],
        'file': json['file'] == null ? undefined : json['file'],
        'uploadName': json['upload_name'] == null ? undefined : json['upload_name'],
        'uploadType': json['upload_type'] == null ? undefined : UploadTypeEnumFromJSON(json['upload_type']),
        'uploadedBy': json['uploaded_by'] == null ? undefined : json['uploaded_by'],
    };
}

  export function PatchedTemporaryUploadRequestToJSON(json: any): PatchedTemporaryUploadRequest {
      return PatchedTemporaryUploadRequestToJSONTyped(json, false);
  }

  export function PatchedTemporaryUploadRequestToJSONTyped(value?: PatchedTemporaryUploadRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'upload_id': value['uploadId'],
        'file_name': value['fileName'],
        'file_id': value['fileId'],
        'file': value['file'],
        'upload_name': value['uploadName'],
        'upload_type': UploadTypeEnumToJSON(value['uploadType']),
        'uploaded_by': value['uploadedBy'],
    };
}

