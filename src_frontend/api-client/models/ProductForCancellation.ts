/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
    ProductToJSONTyped,
} from './Product';

/**
 * 
 * @export
 * @interface ProductForCancellation
 */
export interface ProductForCancellation {
    /**
     * 
     * @type {Product}
     * @memberof ProductForCancellation
     */
    readonly product: Product;
    /**
     * 
     * @type {boolean}
     * @memberof ProductForCancellation
     */
    isInTrial: boolean;
    /**
     * 
     * @type {Date}
     * @memberof ProductForCancellation
     */
    cancellationDate: Date;
}

/**
 * Check if a given object implements the ProductForCancellation interface.
 */
export function instanceOfProductForCancellation(value: object): value is ProductForCancellation {
    if (!('product' in value) || value['product'] === undefined) return false;
    if (!('isInTrial' in value) || value['isInTrial'] === undefined) return false;
    if (!('cancellationDate' in value) || value['cancellationDate'] === undefined) return false;
    return true;
}

export function ProductForCancellationFromJSON(json: any): ProductForCancellation {
    return ProductForCancellationFromJSONTyped(json, false);
}

export function ProductForCancellationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductForCancellation {
    if (json == null) {
        return json;
    }
    return {
        
        'product': ProductFromJSON(json['product']),
        'isInTrial': json['is_in_trial'],
        'cancellationDate': (new Date(json['cancellation_date'])),
    };
}

  export function ProductForCancellationToJSON(json: any): ProductForCancellation {
      return ProductForCancellationToJSONTyped(json, false);
  }

  export function ProductForCancellationToJSONTyped(value?: Omit<ProductForCancellation, 'product'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'is_in_trial': value['isInTrial'],
        'cancellation_date': ((value['cancellationDate']).toISOString().substring(0,10)),
    };
}

