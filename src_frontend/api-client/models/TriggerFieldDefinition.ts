/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TriggerFieldDefinition
 */
export interface TriggerFieldDefinition {
    /**
     * 
     * @type {string}
     * @memberof TriggerFieldDefinition
     */
    label: string;
    /**
     * 
     * @type {string}
     * @memberof TriggerFieldDefinition
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof TriggerFieldDefinition
     */
    fieldName: string;
    /**
     * 
     * @type {any}
     * @memberof TriggerFieldDefinition
     */
    additionalData?: any | null;
}

/**
 * Check if a given object implements the TriggerFieldDefinition interface.
 */
export function instanceOfTriggerFieldDefinition(value: object): value is TriggerFieldDefinition {
    if (!('label' in value) || value['label'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('fieldName' in value) || value['fieldName'] === undefined) return false;
    return true;
}

export function TriggerFieldDefinitionFromJSON(json: any): TriggerFieldDefinition {
    return TriggerFieldDefinitionFromJSONTyped(json, false);
}

export function TriggerFieldDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): TriggerFieldDefinition {
    if (json == null) {
        return json;
    }
    return {
        
        'label': json['label'],
        'type': json['type'],
        'fieldName': json['field_name'],
        'additionalData': json['additional_data'] == null ? undefined : json['additional_data'],
    };
}

  export function TriggerFieldDefinitionToJSON(json: any): TriggerFieldDefinition {
      return TriggerFieldDefinitionToJSONTyped(json, false);
  }

  export function TriggerFieldDefinitionToJSONTyped(value?: TriggerFieldDefinition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'label': value['label'],
        'type': value['type'],
        'field_name': value['fieldName'],
        'additional_data': value['additionalData'],
    };
}

