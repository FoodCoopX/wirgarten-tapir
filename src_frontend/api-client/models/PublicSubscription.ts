/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PublicProductType } from './PublicProductType';
import {
    PublicProductTypeFromJSON,
    PublicProductTypeFromJSONTyped,
    PublicProductTypeToJSON,
    PublicProductTypeToJSONTyped,
} from './PublicProductType';

/**
 * 
 * @export
 * @interface PublicSubscription
 */
export interface PublicSubscription {
    /**
     * 
     * @type {string}
     * @memberof PublicSubscription
     */
    readonly productName: string;
    /**
     * 
     * @type {string}
     * @memberof PublicSubscription
     */
    readonly productId: string;
    /**
     * 
     * @type {PublicProductType}
     * @memberof PublicSubscription
     */
    readonly productType: PublicProductType;
    /**
     * 
     * @type {number}
     * @memberof PublicSubscription
     */
    quantity: number;
    /**
     * 
     * @type {Date}
     * @memberof PublicSubscription
     */
    startDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof PublicSubscription
     */
    endDate?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof PublicSubscription
     */
    readonly monthlyPrice: number;
    /**
     * 
     * @type {string}
     * @memberof PublicSubscription
     */
    readonly solidarityDisplay: string | null;
}

/**
 * Check if a given object implements the PublicSubscription interface.
 */
export function instanceOfPublicSubscription(value: object): value is PublicSubscription {
    if (!('productName' in value) || value['productName'] === undefined) return false;
    if (!('productId' in value) || value['productId'] === undefined) return false;
    if (!('productType' in value) || value['productType'] === undefined) return false;
    if (!('quantity' in value) || value['quantity'] === undefined) return false;
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    if (!('monthlyPrice' in value) || value['monthlyPrice'] === undefined) return false;
    if (!('solidarityDisplay' in value) || value['solidarityDisplay'] === undefined) return false;
    return true;
}

export function PublicSubscriptionFromJSON(json: any): PublicSubscription {
    return PublicSubscriptionFromJSONTyped(json, false);
}

export function PublicSubscriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicSubscription {
    if (json == null) {
        return json;
    }
    return {
        
        'productName': json['product_name'],
        'productId': json['product_id'],
        'productType': PublicProductTypeFromJSON(json['product_type']),
        'quantity': json['quantity'],
        'startDate': (new Date(json['start_date'])),
        'endDate': json['end_date'] == null ? undefined : (new Date(json['end_date'])),
        'monthlyPrice': json['monthly_price'],
        'solidarityDisplay': json['solidarity_display'],
    };
}

  export function PublicSubscriptionToJSON(json: any): PublicSubscription {
      return PublicSubscriptionToJSONTyped(json, false);
  }

  export function PublicSubscriptionToJSONTyped(value?: Omit<PublicSubscription, 'product_name'|'product_id'|'product_type'|'monthly_price'|'solidarity_display'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'quantity': value['quantity'],
        'start_date': ((value['startDate']).toISOString().substring(0,10)),
        'end_date': value['endDate'] == null ? undefined : ((value['endDate'] as any).toISOString().substring(0,10)),
    };
}

