/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { MemberPaymentRhythm } from "./MemberPaymentRhythm";
import { MemberPaymentRhythmFromJSON, MemberPaymentRhythmToJSON } from "./MemberPaymentRhythm";

/**
 * 
 * @export
 * @interface MemberPaymentRhythmData
 */
export interface MemberPaymentRhythmData {
    /**
     * 
     * @type {string}
     * @memberof MemberPaymentRhythmData
     */
    currentRhythm: string;
    /**
     * 
     * @type {Date}
     * @memberof MemberPaymentRhythmData
     */
    dateOfNextRhythmChange: Date;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof MemberPaymentRhythmData
     */
    allowedRhythms: { [key: string]: string; };
    /**
     * 
     * @type {Array<MemberPaymentRhythm>}
     * @memberof MemberPaymentRhythmData
     */
    rhythmHistory: Array<MemberPaymentRhythm>;
}

/**
 * Check if a given object implements the MemberPaymentRhythmData interface.
 */
export function instanceOfMemberPaymentRhythmData(value: object): value is MemberPaymentRhythmData {
    if (!('currentRhythm' in value) || value['currentRhythm'] === undefined) return false;
    if (!('dateOfNextRhythmChange' in value) || value['dateOfNextRhythmChange'] === undefined) return false;
    if (!('allowedRhythms' in value) || value['allowedRhythms'] === undefined) return false;
    if (!('rhythmHistory' in value) || value['rhythmHistory'] === undefined) return false;
    return true;
}

export function MemberPaymentRhythmDataFromJSON(json: any): MemberPaymentRhythmData {
    return MemberPaymentRhythmDataFromJSONTyped(json, false);
}

export function MemberPaymentRhythmDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberPaymentRhythmData {
    if (json == null) {
        return json;
    }
    return {
        
        'currentRhythm': json['current_rhythm'],
        'dateOfNextRhythmChange': (new Date(json['date_of_next_rhythm_change'])),
        'allowedRhythms': json['allowed_rhythms'],
        'rhythmHistory': ((json['rhythm_history'] as Array<any>).map(MemberPaymentRhythmFromJSON)),
    };
}

  export function MemberPaymentRhythmDataToJSON(json: any): MemberPaymentRhythmData {
      return MemberPaymentRhythmDataToJSONTyped(json, false);
  }

  export function MemberPaymentRhythmDataToJSONTyped(value?: MemberPaymentRhythmData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'current_rhythm': value['currentRhythm'],
        'date_of_next_rhythm_change': ((value['dateOfNextRhythmChange']).toISOString().substring(0,10)),
        'allowed_rhythms': value['allowedRhythms'],
        'rhythm_history': ((value['rhythmHistory'] as Array<any>).map(MemberPaymentRhythmToJSON)),
    };
}

