/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductBasketSizeEquivalenceRequest
 */
export interface ProductBasketSizeEquivalenceRequest {
    /**
     * 
     * @type {string}
     * @memberof ProductBasketSizeEquivalenceRequest
     */
    basketSizeName: string;
    /**
     * 
     * @type {number}
     * @memberof ProductBasketSizeEquivalenceRequest
     */
    quantity: number;
}

/**
 * Check if a given object implements the ProductBasketSizeEquivalenceRequest interface.
 */
export function instanceOfProductBasketSizeEquivalenceRequest(value: object): value is ProductBasketSizeEquivalenceRequest {
    if (!('basketSizeName' in value) || value['basketSizeName'] === undefined) return false;
    if (!('quantity' in value) || value['quantity'] === undefined) return false;
    return true;
}

export function ProductBasketSizeEquivalenceRequestFromJSON(json: any): ProductBasketSizeEquivalenceRequest {
    return ProductBasketSizeEquivalenceRequestFromJSONTyped(json, false);
}

export function ProductBasketSizeEquivalenceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductBasketSizeEquivalenceRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'basketSizeName': json['basket_size_name'],
        'quantity': json['quantity'],
    };
}

  export function ProductBasketSizeEquivalenceRequestToJSON(json: any): ProductBasketSizeEquivalenceRequest {
      return ProductBasketSizeEquivalenceRequestToJSONTyped(json, false);
  }

  export function ProductBasketSizeEquivalenceRequestToJSONTyped(value?: ProductBasketSizeEquivalenceRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'basket_size_name': value['basketSizeName'],
        'quantity': value['quantity'],
    };
}

