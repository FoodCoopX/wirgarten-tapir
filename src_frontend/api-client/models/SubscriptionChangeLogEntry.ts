/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ChangeTypeEnum } from "./ChangeTypeEnum";
import { ChangeTypeEnumFromJSON, ChangeTypeEnumToJSON } from "./ChangeTypeEnum";

/**
 * 
 * @export
 * @interface SubscriptionChangeLogEntry
 */
export interface SubscriptionChangeLogEntry {
    /**
     * 
     * @type {number}
     * @memberof SubscriptionChangeLogEntry
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof SubscriptionChangeLogEntry
     */
    readonly createdDate: Date;
    /**
     * 
     * @type {ChangeTypeEnum}
     * @memberof SubscriptionChangeLogEntry
     */
    changeType: ChangeTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionChangeLogEntry
     */
    subscriptions: string;
    /**
     * 
     * @type {Date}
     * @memberof SubscriptionChangeLogEntry
     */
    adminConfirmed?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionChangeLogEntry
     */
    actor?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionChangeLogEntry
     */
    user?: string | null;
    /**
     * 
     * @type {number}
     * @memberof SubscriptionChangeLogEntry
     */
    logClassType: number;
}



/**
 * Check if a given object implements the SubscriptionChangeLogEntry interface.
 */
export function instanceOfSubscriptionChangeLogEntry(value: object): value is SubscriptionChangeLogEntry {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdDate' in value) || value['createdDate'] === undefined) return false;
    if (!('changeType' in value) || value['changeType'] === undefined) return false;
    if (!('subscriptions' in value) || value['subscriptions'] === undefined) return false;
    if (!('logClassType' in value) || value['logClassType'] === undefined) return false;
    return true;
}

export function SubscriptionChangeLogEntryFromJSON(json: any): SubscriptionChangeLogEntry {
    return SubscriptionChangeLogEntryFromJSONTyped(json, false);
}

export function SubscriptionChangeLogEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionChangeLogEntry {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdDate': (new Date(json['created_date'])),
        'changeType': ChangeTypeEnumFromJSON(json['change_type']),
        'subscriptions': json['subscriptions'],
        'adminConfirmed': json['admin_confirmed'] == null ? undefined : (new Date(json['admin_confirmed'])),
        'actor': json['actor'] == null ? undefined : json['actor'],
        'user': json['user'] == null ? undefined : json['user'],
        'logClassType': json['log_class_type'],
    };
}

  export function SubscriptionChangeLogEntryToJSON(json: any): SubscriptionChangeLogEntry {
      return SubscriptionChangeLogEntryToJSONTyped(json, false);
  }

  export function SubscriptionChangeLogEntryToJSONTyped(value?: Omit<SubscriptionChangeLogEntry, 'id'|'created_date'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'change_type': ChangeTypeEnumToJSON(value['changeType']),
        'subscriptions': value['subscriptions'],
        'admin_confirmed': value['adminConfirmed'] == null ? undefined : ((value['adminConfirmed'] as any).toISOString()),
        'actor': value['actor'],
        'user': value['user'],
        'log_class_type': value['logClassType'],
    };
}

