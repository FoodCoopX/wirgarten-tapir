/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DeliveryCycleEnum } from './DeliveryCycleEnum';
import {
    DeliveryCycleEnumFromJSON,
    DeliveryCycleEnumFromJSONTyped,
    DeliveryCycleEnumToJSON,
    DeliveryCycleEnumToJSONTyped,
} from './DeliveryCycleEnum';

/**
 * 
 * @export
 * @interface ProductTypeRequest
 */
export interface ProductTypeRequest {
    /**
     * 
     * @type {string}
     * @memberof ProductTypeRequest
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductTypeRequest
     */
    name: string;
    /**
     * 
     * @type {DeliveryCycleEnum}
     * @memberof ProductTypeRequest
     */
    deliveryCycle?: DeliveryCycleEnum;
    /**
     * 
     * @type {string}
     * @memberof ProductTypeRequest
     */
    contractLink?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProductTypeRequest
     */
    iconLink?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ProductTypeRequest
     */
    singleSubscriptionOnly?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ProductTypeRequest
     */
    isAffectedByJokers?: boolean;
    /**
     * Bestimmte Produkte wie Vereinsmitgliedschaften laufen permanent bis sie gekündigt werden und haben nicht zwangsläufig ein End-Datum. Solche Produkte sind nicht mit Vertragsperiode verbunden.
     * @type {boolean}
     * @memberof ProductTypeRequest
     */
    subscriptionsHaveEndDates?: boolean;
    /**
     * Ob es Pflicht ist, ein Abonnement an dieses Produkt zu zu zeichnen.
     * @type {boolean}
     * @memberof ProductTypeRequest
     */
    mustBeSubscribedTo?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ProductTypeRequest
     */
    isAssociationMembership?: boolean;
}



/**
 * Check if a given object implements the ProductTypeRequest interface.
 */
export function instanceOfProductTypeRequest(value: object): value is ProductTypeRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function ProductTypeRequestFromJSON(json: any): ProductTypeRequest {
    return ProductTypeRequestFromJSONTyped(json, false);
}

export function ProductTypeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductTypeRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'deliveryCycle': json['delivery_cycle'] == null ? undefined : DeliveryCycleEnumFromJSON(json['delivery_cycle']),
        'contractLink': json['contract_link'] == null ? undefined : json['contract_link'],
        'iconLink': json['icon_link'] == null ? undefined : json['icon_link'],
        'singleSubscriptionOnly': json['single_subscription_only'] == null ? undefined : json['single_subscription_only'],
        'isAffectedByJokers': json['is_affected_by_jokers'] == null ? undefined : json['is_affected_by_jokers'],
        'subscriptionsHaveEndDates': json['subscriptions_have_end_dates'] == null ? undefined : json['subscriptions_have_end_dates'],
        'mustBeSubscribedTo': json['must_be_subscribed_to'] == null ? undefined : json['must_be_subscribed_to'],
        'isAssociationMembership': json['is_association_membership'] == null ? undefined : json['is_association_membership'],
    };
}

  export function ProductTypeRequestToJSON(json: any): ProductTypeRequest {
      return ProductTypeRequestToJSONTyped(json, false);
  }

  export function ProductTypeRequestToJSONTyped(value?: ProductTypeRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'delivery_cycle': DeliveryCycleEnumToJSON(value['deliveryCycle']),
        'contract_link': value['contractLink'],
        'icon_link': value['iconLink'],
        'single_subscription_only': value['singleSubscriptionOnly'],
        'is_affected_by_jokers': value['isAffectedByJokers'],
        'subscriptions_have_end_dates': value['subscriptionsHaveEndDates'],
        'must_be_subscribed_to': value['mustBeSubscribedTo'],
        'is_association_membership': value['isAssociationMembership'],
    };
}

