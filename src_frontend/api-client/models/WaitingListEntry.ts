/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MemberCountry } from './MemberCountry';
import {
    MemberCountryFromJSON,
    MemberCountryFromJSONTyped,
    MemberCountryToJSON,
    MemberCountryToJSONTyped,
} from './MemberCountry';

/**
 * 
 * @export
 * @interface WaitingListEntry
 */
export interface WaitingListEntry {
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntry
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntry
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntry
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntry
     */
    phoneNumber: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntry
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntry
     */
    street?: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntry
     */
    street2?: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntry
     */
    postcode?: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntry
     */
    city?: string;
    /**
     * 
     * @type {MemberCountry}
     * @memberof WaitingListEntry
     */
    country?: MemberCountry;
    /**
     * 
     * @type {Date}
     * @memberof WaitingListEntry
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof WaitingListEntry
     */
    privacyConsent: Date;
    /**
     * 
     * @type {number}
     * @memberof WaitingListEntry
     */
    numberOfCoopShares: number;
    /**
     * 
     * @type {Date}
     * @memberof WaitingListEntry
     */
    desiredStartDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntry
     */
    comment?: string;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntry
     */
    category?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntry
     */
    confirmationLinkKey?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof WaitingListEntry
     */
    linkSentDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof WaitingListEntry
     */
    member?: string | null;
}

/**
 * Check if a given object implements the WaitingListEntry interface.
 */
export function instanceOfWaitingListEntry(value: object): value is WaitingListEntry {
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('phoneNumber' in value) || value['phoneNumber'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('privacyConsent' in value) || value['privacyConsent'] === undefined) return false;
    if (!('numberOfCoopShares' in value) || value['numberOfCoopShares'] === undefined) return false;
    return true;
}

export function WaitingListEntryFromJSON(json: any): WaitingListEntry {
    return WaitingListEntryFromJSONTyped(json, false);
}

export function WaitingListEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): WaitingListEntry {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'firstName': json['first_name'],
        'lastName': json['last_name'],
        'phoneNumber': json['phone_number'],
        'email': json['email'],
        'street': json['street'] == null ? undefined : json['street'],
        'street2': json['street_2'] == null ? undefined : json['street_2'],
        'postcode': json['postcode'] == null ? undefined : json['postcode'],
        'city': json['city'] == null ? undefined : json['city'],
        'country': json['country'] == null ? undefined : MemberCountryFromJSON(json['country']),
        'createdAt': (new Date(json['created_at'])),
        'privacyConsent': (new Date(json['privacy_consent'])),
        'numberOfCoopShares': json['number_of_coop_shares'],
        'desiredStartDate': json['desired_start_date'] == null ? undefined : (new Date(json['desired_start_date'])),
        'comment': json['comment'] == null ? undefined : json['comment'],
        'category': json['category'] == null ? undefined : json['category'],
        'confirmationLinkKey': json['confirmation_link_key'] == null ? undefined : json['confirmation_link_key'],
        'linkSentDate': json['link_sent_date'] == null ? undefined : (new Date(json['link_sent_date'])),
        'member': json['member'] == null ? undefined : json['member'],
    };
}

  export function WaitingListEntryToJSON(json: any): WaitingListEntry {
      return WaitingListEntryToJSONTyped(json, false);
  }

  export function WaitingListEntryToJSONTyped(value?: Omit<WaitingListEntry, 'created_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'first_name': value['firstName'],
        'last_name': value['lastName'],
        'phone_number': value['phoneNumber'],
        'email': value['email'],
        'street': value['street'],
        'street_2': value['street2'],
        'postcode': value['postcode'],
        'city': value['city'],
        'country': MemberCountryToJSON(value['country']),
        'privacy_consent': ((value['privacyConsent']).toISOString()),
        'number_of_coop_shares': value['numberOfCoopShares'],
        'desired_start_date': value['desiredStartDate'] == null ? undefined : ((value['desiredStartDate'] as any).toISOString().substring(0,10)),
        'comment': value['comment'],
        'category': value['category'],
        'confirmation_link_key': value['confirmationLinkKey'],
        'link_sent_date': value['linkSentDate'] == null ? undefined : ((value['linkSentDate'] as any).toISOString()),
        'member': value['member'],
    };
}

