/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { PickupLocationCapacityChangePoint } from "./PickupLocationCapacityChangePoint";
import {
  PickupLocationCapacityChangePointFromJSON,
  PickupLocationCapacityChangePointToJSON,
} from "./PickupLocationCapacityChangePoint";

/**
 *
 * @export
 * @interface PickupLocationCapacityEvolution
 */
export interface PickupLocationCapacityEvolution {
  /**
   *
   * @type {Array<string>}
   * @memberof PickupLocationCapacityEvolution
   */
  tableHeaders: Array<string>;
  /**
   *
   * @type {Array<PickupLocationCapacityChangePoint>}
   * @memberof PickupLocationCapacityEvolution
   */
  dataPoints: Array<PickupLocationCapacityChangePoint>;
}

/**
 * Check if a given object implements the PickupLocationCapacityEvolution interface.
 */
export function instanceOfPickupLocationCapacityEvolution(
  value: object,
): value is PickupLocationCapacityEvolution {
  if (!("tableHeaders" in value) || value["tableHeaders"] === undefined)
    return false;
  if (!("dataPoints" in value) || value["dataPoints"] === undefined)
    return false;
  return true;
}

export function PickupLocationCapacityEvolutionFromJSON(
  json: any,
): PickupLocationCapacityEvolution {
  return PickupLocationCapacityEvolutionFromJSONTyped(json, false);
}

export function PickupLocationCapacityEvolutionFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PickupLocationCapacityEvolution {
  if (json == null) {
    return json;
  }
  return {
    tableHeaders: json["table_headers"],
    dataPoints: (json["data_points"] as Array<any>).map(
      PickupLocationCapacityChangePointFromJSON,
    ),
  };
}

export function PickupLocationCapacityEvolutionToJSON(
  json: any,
): PickupLocationCapacityEvolution {
  return PickupLocationCapacityEvolutionToJSONTyped(json, false);
}

export function PickupLocationCapacityEvolutionToJSONTyped(
  value?: PickupLocationCapacityEvolution | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    table_headers: value["tableHeaders"],
    data_points: (value["dataPoints"] as Array<any>).map(
      PickupLocationCapacityChangePointToJSON,
    ),
  };
}
