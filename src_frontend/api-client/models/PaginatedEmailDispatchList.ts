/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { EmailDispatch } from "./EmailDispatch";
import { EmailDispatchFromJSON, EmailDispatchToJSON } from "./EmailDispatch";

/**
 *
 * @export
 * @interface PaginatedEmailDispatchList
 */
export interface PaginatedEmailDispatchList {
  /**
   *
   * @type {number}
   * @memberof PaginatedEmailDispatchList
   */
  count: number;
  /**
   *
   * @type {string}
   * @memberof PaginatedEmailDispatchList
   */
  next?: string | null;
  /**
   *
   * @type {string}
   * @memberof PaginatedEmailDispatchList
   */
  previous?: string | null;
  /**
   *
   * @type {Array<EmailDispatch>}
   * @memberof PaginatedEmailDispatchList
   */
  results: Array<EmailDispatch>;
}

/**
 * Check if a given object implements the PaginatedEmailDispatchList interface.
 */
export function instanceOfPaginatedEmailDispatchList(
  value: object,
): value is PaginatedEmailDispatchList {
  if (!("count" in value) || value["count"] === undefined) return false;
  if (!("results" in value) || value["results"] === undefined) return false;
  return true;
}

export function PaginatedEmailDispatchListFromJSON(
  json: any,
): PaginatedEmailDispatchList {
  return PaginatedEmailDispatchListFromJSONTyped(json, false);
}

export function PaginatedEmailDispatchListFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PaginatedEmailDispatchList {
  if (json == null) {
    return json;
  }
  return {
    count: json["count"],
    next: json["next"] == null ? undefined : json["next"],
    previous: json["previous"] == null ? undefined : json["previous"],
    results: (json["results"] as Array<any>).map(EmailDispatchFromJSON),
  };
}

export function PaginatedEmailDispatchListToJSON(
  json: any,
): PaginatedEmailDispatchList {
  return PaginatedEmailDispatchListToJSONTyped(json, false);
}

export function PaginatedEmailDispatchListToJSONTyped(
  value?: PaginatedEmailDispatchList | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    count: value["count"],
    next: value["next"],
    previous: value["previous"],
    results: (value["results"] as Array<any>).map(EmailDispatchToJSON),
  };
}
