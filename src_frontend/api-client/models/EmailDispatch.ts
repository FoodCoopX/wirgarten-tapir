/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmailConfigurationDispatch } from './EmailConfigurationDispatch';
import {
    EmailConfigurationDispatchFromJSON,
    EmailConfigurationDispatchFromJSONTyped,
    EmailConfigurationDispatchToJSON,
    EmailConfigurationDispatchToJSONTyped,
} from './EmailConfigurationDispatch';
import type { DispatchStatusEnum } from './DispatchStatusEnum';
import {
    DispatchStatusEnumFromJSON,
    DispatchStatusEnumFromJSONTyped,
    DispatchStatusEnumToJSON,
    DispatchStatusEnumToJSONTyped,
} from './DispatchStatusEnum';
import type { BounceTypeEnum } from './BounceTypeEnum';
import {
    BounceTypeEnumFromJSON,
    BounceTypeEnumFromJSONTyped,
    BounceTypeEnumToJSON,
    BounceTypeEnumToJSONTyped,
} from './BounceTypeEnum';

/**
 * 
 * @export
 * @interface EmailDispatch
 */
export interface EmailDispatch {
    /**
     * 
     * @type {string}
     * @memberof EmailDispatch
     */
    id?: string;
    /**
     * 
     * @type {EmailConfigurationDispatch}
     * @memberof EmailDispatch
     */
    emailConfigurationDispatch: EmailConfigurationDispatch;
    /**
     * 
     * @type {DispatchStatusEnum}
     * @memberof EmailDispatch
     */
    dispatchStatus: DispatchStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof EmailDispatch
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof EmailDispatch
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof EmailDispatch
     */
    recipient: string;
    /**
     * 
     * @type {any}
     * @memberof EmailDispatch
     */
    recipientTokens?: any | null;
    /**
     * 
     * @type {any}
     * @memberof EmailDispatch
     */
    additionalTokens?: any | null;
    /**
     * 
     * @type {Date}
     * @memberof EmailDispatch
     */
    sentTime?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof EmailDispatch
     */
    openedTime?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof EmailDispatch
     */
    errorMessage?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EmailDispatch
     */
    bounceMessage?: string | null;
    /**
     * 
     * @type {BounceTypeEnum}
     * @memberof EmailDispatch
     */
    bounceType?: BounceTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof EmailDispatch
     */
    nextRetry?: string | null;
}



/**
 * Check if a given object implements the EmailDispatch interface.
 */
export function instanceOfEmailDispatch(value: object): value is EmailDispatch {
    if (!('emailConfigurationDispatch' in value) || value['emailConfigurationDispatch'] === undefined) return false;
    if (!('dispatchStatus' in value) || value['dispatchStatus'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('recipient' in value) || value['recipient'] === undefined) return false;
    return true;
}

export function EmailDispatchFromJSON(json: any): EmailDispatch {
    return EmailDispatchFromJSONTyped(json, false);
}

export function EmailDispatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailDispatch {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'emailConfigurationDispatch': EmailConfigurationDispatchFromJSON(json['email_configuration_dispatch']),
        'dispatchStatus': DispatchStatusEnumFromJSON(json['dispatch_status']),
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'recipient': json['recipient'],
        'recipientTokens': json['recipient_tokens'] == null ? undefined : json['recipient_tokens'],
        'additionalTokens': json['additional_tokens'] == null ? undefined : json['additional_tokens'],
        'sentTime': json['sent_time'] == null ? undefined : (new Date(json['sent_time'])),
        'openedTime': json['opened_time'] == null ? undefined : (new Date(json['opened_time'])),
        'errorMessage': json['error_message'] == null ? undefined : json['error_message'],
        'bounceMessage': json['bounce_message'] == null ? undefined : json['bounce_message'],
        'bounceType': json['bounce_type'] == null ? undefined : BounceTypeEnumFromJSON(json['bounce_type']),
        'nextRetry': json['next_retry'] == null ? undefined : json['next_retry'],
    };
}

  export function EmailDispatchToJSON(json: any): EmailDispatch {
      return EmailDispatchToJSONTyped(json, false);
  }

  export function EmailDispatchToJSONTyped(value?: Omit<EmailDispatch, 'created_at'|'updated_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'email_configuration_dispatch': EmailConfigurationDispatchToJSON(value['emailConfigurationDispatch']),
        'dispatch_status': DispatchStatusEnumToJSON(value['dispatchStatus']),
        'recipient': value['recipient'],
        'recipient_tokens': value['recipientTokens'],
        'additional_tokens': value['additionalTokens'],
        'sent_time': value['sentTime'] == null ? undefined : ((value['sentTime'] as any).toISOString()),
        'opened_time': value['openedTime'] == null ? undefined : ((value['openedTime'] as any).toISOString()),
        'error_message': value['errorMessage'],
        'bounce_message': value['bounceMessage'],
        'bounce_type': BounceTypeEnumToJSON(value['bounceType']),
        'next_retry': value['nextRetry'],
    };
}

