/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ProductType } from "./ProductType";
import { ProductTypeFromJSON, ProductTypeToJSON } from "./ProductType";
import type { Subscription } from "./Subscription";
import { SubscriptionFromJSON, SubscriptionToJSON } from "./Subscription";

/**
 *
 * @export
 * @interface SubscriptionChange
 */
export interface SubscriptionChange {
  /**
   *
   * @type {ProductType}
   * @memberof SubscriptionChange
   */
  productType: ProductType;
  /**
   *
   * @type {Array<Subscription>}
   * @memberof SubscriptionChange
   */
  subscriptionCancellations: Array<Subscription>;
  /**
   *
   * @type {Array<Subscription>}
   * @memberof SubscriptionChange
   */
  subscriptionCreations: Array<Subscription>;
}

/**
 * Check if a given object implements the SubscriptionChange interface.
 */
export function instanceOfSubscriptionChange(
  value: object,
): value is SubscriptionChange {
  if (!("productType" in value) || value["productType"] === undefined)
    return false;
  if (
    !("subscriptionCancellations" in value) ||
    value["subscriptionCancellations"] === undefined
  )
    return false;
  if (
    !("subscriptionCreations" in value) ||
    value["subscriptionCreations"] === undefined
  )
    return false;
  return true;
}

export function SubscriptionChangeFromJSON(json: any): SubscriptionChange {
  return SubscriptionChangeFromJSONTyped(json, false);
}

export function SubscriptionChangeFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SubscriptionChange {
  if (json == null) {
    return json;
  }
  return {
    productType: ProductTypeFromJSON(json["product_type"]),
    subscriptionCancellations: (
      json["subscription_cancellations"] as Array<any>
    ).map(SubscriptionFromJSON),
    subscriptionCreations: (json["subscription_creations"] as Array<any>).map(
      SubscriptionFromJSON,
    ),
  };
}

export function SubscriptionChangeToJSON(json: any): SubscriptionChange {
  return SubscriptionChangeToJSONTyped(json, false);
}

export function SubscriptionChangeToJSONTyped(
  value?: SubscriptionChange | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    product_type: ProductTypeToJSON(value["productType"]),
    subscription_cancellations: (
      value["subscriptionCancellations"] as Array<any>
    ).map(SubscriptionToJSON),
    subscription_creations: (value["subscriptionCreations"] as Array<any>).map(
      SubscriptionToJSON,
    ),
  };
}
