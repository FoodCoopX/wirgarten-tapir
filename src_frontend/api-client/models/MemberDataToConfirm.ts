/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { PickupLocation } from "./PickupLocation";
import { PickupLocationFromJSON, PickupLocationToJSON } from "./PickupLocation";
import type { CoopShareTransaction } from "./CoopShareTransaction";
import {
  CoopShareTransactionFromJSON,
  CoopShareTransactionToJSON,
} from "./CoopShareTransaction";
import type { SubscriptionChange } from "./SubscriptionChange";
import {
  SubscriptionChangeFromJSON,
  SubscriptionChangeToJSON,
} from "./SubscriptionChange";
import type { Subscription } from "./Subscription";
import { SubscriptionFromJSON, SubscriptionToJSON } from "./Subscription";
import type { Member } from "./Member";
import { MemberFromJSON, MemberToJSON } from "./Member";

/**
 *
 * @export
 * @interface MemberDataToConfirm
 */
export interface MemberDataToConfirm {
  /**
   *
   * @type {Member}
   * @memberof MemberDataToConfirm
   */
  member: Member;
  /**
   *
   * @type {PickupLocation}
   * @memberof MemberDataToConfirm
   */
  pickupLocation: PickupLocation;
  /**
   *
   * @type {Array<Subscription>}
   * @memberof MemberDataToConfirm
   */
  subscriptionCancellations: Array<Subscription>;
  /**
   *
   * @type {Array<Subscription>}
   * @memberof MemberDataToConfirm
   */
  subscriptionCreations: Array<Subscription>;
  /**
   *
   * @type {Array<SubscriptionChange>}
   * @memberof MemberDataToConfirm
   */
  subscriptionChanges: Array<SubscriptionChange>;
  /**
   *
   * @type {boolean}
   * @memberof MemberDataToConfirm
   */
  showWarning: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof MemberDataToConfirm
   */
  cancellationTypes: Array<string>;
  /**
   *
   * @type {Array<CoopShareTransaction>}
   * @memberof MemberDataToConfirm
   */
  shareTransactions: Array<CoopShareTransaction>;
}

/**
 * Check if a given object implements the MemberDataToConfirm interface.
 */
export function instanceOfMemberDataToConfirm(
  value: object,
): value is MemberDataToConfirm {
  if (!("member" in value) || value["member"] === undefined) return false;
  if (!("pickupLocation" in value) || value["pickupLocation"] === undefined)
    return false;
  if (
    !("subscriptionCancellations" in value) ||
    value["subscriptionCancellations"] === undefined
  )
    return false;
  if (
    !("subscriptionCreations" in value) ||
    value["subscriptionCreations"] === undefined
  )
    return false;
  if (
    !("subscriptionChanges" in value) ||
    value["subscriptionChanges"] === undefined
  )
    return false;
  if (!("showWarning" in value) || value["showWarning"] === undefined)
    return false;
  if (
    !("cancellationTypes" in value) ||
    value["cancellationTypes"] === undefined
  )
    return false;
  if (
    !("shareTransactions" in value) ||
    value["shareTransactions"] === undefined
  )
    return false;
  return true;
}

export function MemberDataToConfirmFromJSON(json: any): MemberDataToConfirm {
  return MemberDataToConfirmFromJSONTyped(json, false);
}

export function MemberDataToConfirmFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): MemberDataToConfirm {
  if (json == null) {
    return json;
  }
  return {
    member: MemberFromJSON(json["member"]),
    pickupLocation: PickupLocationFromJSON(json["pickup_location"]),
    subscriptionCancellations: (
      json["subscription_cancellations"] as Array<any>
    ).map(SubscriptionFromJSON),
    subscriptionCreations: (json["subscription_creations"] as Array<any>).map(
      SubscriptionFromJSON,
    ),
    subscriptionChanges: (json["subscription_changes"] as Array<any>).map(
      SubscriptionChangeFromJSON,
    ),
    showWarning: json["show_warning"],
    cancellationTypes: json["cancellation_types"],
    shareTransactions: (json["share_transactions"] as Array<any>).map(
      CoopShareTransactionFromJSON,
    ),
  };
}

export function MemberDataToConfirmToJSON(json: any): MemberDataToConfirm {
  return MemberDataToConfirmToJSONTyped(json, false);
}

export function MemberDataToConfirmToJSONTyped(
  value?: MemberDataToConfirm | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    member: MemberToJSON(value["member"]),
    pickup_location: PickupLocationToJSON(value["pickupLocation"]),
    subscription_cancellations: (
      value["subscriptionCancellations"] as Array<any>
    ).map(SubscriptionToJSON),
    subscription_creations: (value["subscriptionCreations"] as Array<any>).map(
      SubscriptionToJSON,
    ),
    subscription_changes: (value["subscriptionChanges"] as Array<any>).map(
      SubscriptionChangeToJSON,
    ),
    show_warning: value["showWarning"],
    cancellation_types: value["cancellationTypes"],
    share_transactions: (value["shareTransactions"] as Array<any>).map(
      CoopShareTransactionToJSON,
    ),
  };
}
