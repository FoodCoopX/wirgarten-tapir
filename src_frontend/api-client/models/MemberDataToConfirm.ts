/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PickupLocation } from './PickupLocation';
import {
    PickupLocationFromJSON,
    PickupLocationFromJSONTyped,
    PickupLocationToJSON,
    PickupLocationToJSONTyped,
} from './PickupLocation';
import type { CoopShareTransaction } from './CoopShareTransaction';
import {
    CoopShareTransactionFromJSON,
    CoopShareTransactionFromJSONTyped,
    CoopShareTransactionToJSON,
    CoopShareTransactionToJSONTyped,
} from './CoopShareTransaction';
import type { SubscriptionChange } from './SubscriptionChange';
import {
    SubscriptionChangeFromJSON,
    SubscriptionChangeFromJSONTyped,
    SubscriptionChangeToJSON,
    SubscriptionChangeToJSONTyped,
} from './SubscriptionChange';
import type { Subscription } from './Subscription';
import {
    SubscriptionFromJSON,
    SubscriptionFromJSONTyped,
    SubscriptionToJSON,
    SubscriptionToJSONTyped,
} from './Subscription';
import type { Member } from './Member';
import {
    MemberFromJSON,
    MemberFromJSONTyped,
    MemberToJSON,
    MemberToJSONTyped,
} from './Member';

/**
 * 
 * @export
 * @interface MemberDataToConfirm
 */
export interface MemberDataToConfirm {
    /**
     * 
     * @type {Member}
     * @memberof MemberDataToConfirm
     */
    member: Member;
    /**
     * 
     * @type {PickupLocation}
     * @memberof MemberDataToConfirm
     */
    pickupLocation: PickupLocation;
    /**
     * 
     * @type {boolean}
     * @memberof MemberDataToConfirm
     */
    showWarning: boolean;
    /**
     * 
     * @type {Array<Subscription>}
     * @memberof MemberDataToConfirm
     */
    subscriptionCancellations: Array<Subscription>;
    /**
     * 
     * @type {Array<Subscription>}
     * @memberof MemberDataToConfirm
     */
    subscriptionCreations: Array<Subscription>;
    /**
     * 
     * @type {Array<SubscriptionChange>}
     * @memberof MemberDataToConfirm
     */
    subscriptionChanges: Array<SubscriptionChange>;
    /**
     * 
     * @type {Array<CoopShareTransaction>}
     * @memberof MemberDataToConfirm
     */
    shareTransactions: Array<CoopShareTransaction>;
}

/**
 * Check if a given object implements the MemberDataToConfirm interface.
 */
export function instanceOfMemberDataToConfirm(value: object): value is MemberDataToConfirm {
    if (!('member' in value) || value['member'] === undefined) return false;
    if (!('pickupLocation' in value) || value['pickupLocation'] === undefined) return false;
    if (!('showWarning' in value) || value['showWarning'] === undefined) return false;
    if (!('subscriptionCancellations' in value) || value['subscriptionCancellations'] === undefined) return false;
    if (!('subscriptionCreations' in value) || value['subscriptionCreations'] === undefined) return false;
    if (!('subscriptionChanges' in value) || value['subscriptionChanges'] === undefined) return false;
    if (!('shareTransactions' in value) || value['shareTransactions'] === undefined) return false;
    return true;
}

export function MemberDataToConfirmFromJSON(json: any): MemberDataToConfirm {
    return MemberDataToConfirmFromJSONTyped(json, false);
}

export function MemberDataToConfirmFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberDataToConfirm {
    if (json == null) {
        return json;
    }
    return {
        
        'member': MemberFromJSON(json['member']),
        'pickupLocation': PickupLocationFromJSON(json['pickup_location']),
        'showWarning': json['show_warning'],
        'subscriptionCancellations': ((json['subscription_cancellations'] as Array<any>).map(SubscriptionFromJSON)),
        'subscriptionCreations': ((json['subscription_creations'] as Array<any>).map(SubscriptionFromJSON)),
        'subscriptionChanges': ((json['subscription_changes'] as Array<any>).map(SubscriptionChangeFromJSON)),
        'shareTransactions': ((json['share_transactions'] as Array<any>).map(CoopShareTransactionFromJSON)),
    };
}

  export function MemberDataToConfirmToJSON(json: any): MemberDataToConfirm {
      return MemberDataToConfirmToJSONTyped(json, false);
  }

  export function MemberDataToConfirmToJSONTyped(value?: MemberDataToConfirm | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'member': MemberToJSON(value['member']),
        'pickup_location': PickupLocationToJSON(value['pickupLocation']),
        'show_warning': value['showWarning'],
        'subscription_cancellations': ((value['subscriptionCancellations'] as Array<any>).map(SubscriptionToJSON)),
        'subscription_creations': ((value['subscriptionCreations'] as Array<any>).map(SubscriptionToJSON)),
        'subscription_changes': ((value['subscriptionChanges'] as Array<any>).map(SubscriptionChangeToJSON)),
        'share_transactions': ((value['shareTransactions'] as Array<any>).map(CoopShareTransactionToJSON)),
    };
}

