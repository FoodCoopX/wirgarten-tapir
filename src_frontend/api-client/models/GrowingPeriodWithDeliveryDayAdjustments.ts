/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DeliveryDayAdjustment } from './DeliveryDayAdjustment';
import {
    DeliveryDayAdjustmentFromJSON,
    DeliveryDayAdjustmentFromJSONTyped,
    DeliveryDayAdjustmentToJSON,
    DeliveryDayAdjustmentToJSONTyped,
} from './DeliveryDayAdjustment';

/**
 * 
 * @export
 * @interface GrowingPeriodWithDeliveryDayAdjustments
 */
export interface GrowingPeriodWithDeliveryDayAdjustments {
    /**
     * 
     * @type {string}
     * @memberof GrowingPeriodWithDeliveryDayAdjustments
     */
    growingPeriodId: string;
    /**
     * 
     * @type {Date}
     * @memberof GrowingPeriodWithDeliveryDayAdjustments
     */
    growingPeriodStartDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof GrowingPeriodWithDeliveryDayAdjustments
     */
    growingPeriodEndDate: Date;
    /**
     * 
     * @type {Array<number>}
     * @memberof GrowingPeriodWithDeliveryDayAdjustments
     */
    growingPeriodWeeksWithoutDelivery: Array<number>;
    /**
     * 
     * @type {Array<DeliveryDayAdjustment>}
     * @memberof GrowingPeriodWithDeliveryDayAdjustments
     */
    adjustments: Array<DeliveryDayAdjustment>;
    /**
     * 
     * @type {number}
     * @memberof GrowingPeriodWithDeliveryDayAdjustments
     */
    maxJokersPerMember: number;
    /**
     * 
     * @type {string}
     * @memberof GrowingPeriodWithDeliveryDayAdjustments
     */
    jokerRestrictions: string;
    /**
     * 
     * @type {boolean}
     * @memberof GrowingPeriodWithDeliveryDayAdjustments
     */
    readonly jokersEnabled: boolean;
}

/**
 * Check if a given object implements the GrowingPeriodWithDeliveryDayAdjustments interface.
 */
export function instanceOfGrowingPeriodWithDeliveryDayAdjustments(value: object): value is GrowingPeriodWithDeliveryDayAdjustments {
    if (!('growingPeriodId' in value) || value['growingPeriodId'] === undefined) return false;
    if (!('growingPeriodStartDate' in value) || value['growingPeriodStartDate'] === undefined) return false;
    if (!('growingPeriodEndDate' in value) || value['growingPeriodEndDate'] === undefined) return false;
    if (!('growingPeriodWeeksWithoutDelivery' in value) || value['growingPeriodWeeksWithoutDelivery'] === undefined) return false;
    if (!('adjustments' in value) || value['adjustments'] === undefined) return false;
    if (!('maxJokersPerMember' in value) || value['maxJokersPerMember'] === undefined) return false;
    if (!('jokerRestrictions' in value) || value['jokerRestrictions'] === undefined) return false;
    if (!('jokersEnabled' in value) || value['jokersEnabled'] === undefined) return false;
    return true;
}

export function GrowingPeriodWithDeliveryDayAdjustmentsFromJSON(json: any): GrowingPeriodWithDeliveryDayAdjustments {
    return GrowingPeriodWithDeliveryDayAdjustmentsFromJSONTyped(json, false);
}

export function GrowingPeriodWithDeliveryDayAdjustmentsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GrowingPeriodWithDeliveryDayAdjustments {
    if (json == null) {
        return json;
    }
    return {
        
        'growingPeriodId': json['growing_period_id'],
        'growingPeriodStartDate': (new Date(json['growing_period_start_date'])),
        'growingPeriodEndDate': (new Date(json['growing_period_end_date'])),
        'growingPeriodWeeksWithoutDelivery': json['growing_period_weeks_without_delivery'],
        'adjustments': ((json['adjustments'] as Array<any>).map(DeliveryDayAdjustmentFromJSON)),
        'maxJokersPerMember': json['max_jokers_per_member'],
        'jokerRestrictions': json['joker_restrictions'],
        'jokersEnabled': json['jokers_enabled'],
    };
}

  export function GrowingPeriodWithDeliveryDayAdjustmentsToJSON(json: any): GrowingPeriodWithDeliveryDayAdjustments {
      return GrowingPeriodWithDeliveryDayAdjustmentsToJSONTyped(json, false);
  }

  export function GrowingPeriodWithDeliveryDayAdjustmentsToJSONTyped(value?: Omit<GrowingPeriodWithDeliveryDayAdjustments, 'jokers_enabled'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'growing_period_id': value['growingPeriodId'],
        'growing_period_start_date': ((value['growingPeriodStartDate']).toISOString().substring(0,10)),
        'growing_period_end_date': ((value['growingPeriodEndDate']).toISOString().substring(0,10)),
        'growing_period_weeks_without_delivery': value['growingPeriodWeeksWithoutDelivery'],
        'adjustments': ((value['adjustments'] as Array<any>).map(DeliveryDayAdjustmentToJSON)),
        'max_jokers_per_member': value['maxJokersPerMember'],
        'joker_restrictions': value['jokerRestrictions'],
    };
}

