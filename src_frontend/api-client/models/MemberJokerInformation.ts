/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { JokerRestriction } from './JokerRestriction';
import {
    JokerRestrictionFromJSON,
    JokerRestrictionFromJSONTyped,
    JokerRestrictionToJSON,
    JokerRestrictionToJSONTyped,
} from './JokerRestriction';
import type { JokerWithCancellationLimit } from './JokerWithCancellationLimit';
import {
    JokerWithCancellationLimitFromJSON,
    JokerWithCancellationLimitFromJSONTyped,
    JokerWithCancellationLimitToJSON,
    JokerWithCancellationLimitToJSONTyped,
} from './JokerWithCancellationLimit';

/**
 * 
 * @export
 * @interface MemberJokerInformation
 */
export interface MemberJokerInformation {
    /**
     * 
     * @type {Array<JokerWithCancellationLimit>}
     * @memberof MemberJokerInformation
     */
    usedJokers: Array<JokerWithCancellationLimit>;
    /**
     * 
     * @type {number}
     * @memberof MemberJokerInformation
     */
    maxJokersPerGrowingPeriod: number;
    /**
     * 
     * @type {number}
     * @memberof MemberJokerInformation
     */
    weekdayLimit: number;
    /**
     * 
     * @type {Array<JokerRestriction>}
     * @memberof MemberJokerInformation
     */
    jokerRestrictions: Array<JokerRestriction>;
}

/**
 * Check if a given object implements the MemberJokerInformation interface.
 */
export function instanceOfMemberJokerInformation(value: object): value is MemberJokerInformation {
    if (!('usedJokers' in value) || value['usedJokers'] === undefined) return false;
    if (!('maxJokersPerGrowingPeriod' in value) || value['maxJokersPerGrowingPeriod'] === undefined) return false;
    if (!('weekdayLimit' in value) || value['weekdayLimit'] === undefined) return false;
    if (!('jokerRestrictions' in value) || value['jokerRestrictions'] === undefined) return false;
    return true;
}

export function MemberJokerInformationFromJSON(json: any): MemberJokerInformation {
    return MemberJokerInformationFromJSONTyped(json, false);
}

export function MemberJokerInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberJokerInformation {
    if (json == null) {
        return json;
    }
    return {
        
        'usedJokers': ((json['used_jokers'] as Array<any>).map(JokerWithCancellationLimitFromJSON)),
        'maxJokersPerGrowingPeriod': json['max_jokers_per_growing_period'],
        'weekdayLimit': json['weekday_limit'],
        'jokerRestrictions': ((json['joker_restrictions'] as Array<any>).map(JokerRestrictionFromJSON)),
    };
}

  export function MemberJokerInformationToJSON(json: any): MemberJokerInformation {
      return MemberJokerInformationToJSONTyped(json, false);
  }

  export function MemberJokerInformationToJSONTyped(value?: MemberJokerInformation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'used_jokers': ((value['usedJokers'] as Array<any>).map(JokerWithCancellationLimitToJSON)),
        'max_jokers_per_growing_period': value['maxJokersPerGrowingPeriod'],
        'weekday_limit': value['weekdayLimit'],
        'joker_restrictions': ((value['jokerRestrictions'] as Array<any>).map(JokerRestrictionToJSON)),
    };
}

