/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TriggerFieldDefinition } from './TriggerFieldDefinition';
import {
    TriggerFieldDefinitionFromJSON,
    TriggerFieldDefinitionFromJSONTyped,
    TriggerFieldDefinitionToJSON,
    TriggerFieldDefinitionToJSONTyped,
} from './TriggerFieldDefinition';

/**
 * 
 * @export
 * @interface TriggerDefinition
 */
export interface TriggerDefinition {
    /**
     * 
     * @type {string}
     * @memberof TriggerDefinition
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof TriggerDefinition
     */
    name: string;
    /**
     * 
     * @type {Array<TriggerFieldDefinition>}
     * @memberof TriggerDefinition
     */
    fieldDefinitions: Array<TriggerFieldDefinition>;
}

/**
 * Check if a given object implements the TriggerDefinition interface.
 */
export function instanceOfTriggerDefinition(value: object): value is TriggerDefinition {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('fieldDefinitions' in value) || value['fieldDefinitions'] === undefined) return false;
    return true;
}

export function TriggerDefinitionFromJSON(json: any): TriggerDefinition {
    return TriggerDefinitionFromJSONTyped(json, false);
}

export function TriggerDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): TriggerDefinition {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'fieldDefinitions': ((json['field_definitions'] as Array<any>).map(TriggerFieldDefinitionFromJSON)),
    };
}

  export function TriggerDefinitionToJSON(json: any): TriggerDefinition {
      return TriggerDefinitionToJSONTyped(json, false);
  }

  export function TriggerDefinitionToJSONTyped(value?: TriggerDefinition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'field_definitions': ((value['fieldDefinitions'] as Array<any>).map(TriggerFieldDefinitionToJSON)),
    };
}

