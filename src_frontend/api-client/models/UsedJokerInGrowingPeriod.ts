/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UsedJokerInGrowingPeriod
 */
export interface UsedJokerInGrowingPeriod {
    /**
     * 
     * @type {Date}
     * @memberof UsedJokerInGrowingPeriod
     */
    growingPeriodStart: Date;
    /**
     * 
     * @type {Date}
     * @memberof UsedJokerInGrowingPeriod
     */
    growingPeriodEnd: Date;
    /**
     * 
     * @type {number}
     * @memberof UsedJokerInGrowingPeriod
     */
    numberOfUsedJokers: number;
}

/**
 * Check if a given object implements the UsedJokerInGrowingPeriod interface.
 */
export function instanceOfUsedJokerInGrowingPeriod(value: object): value is UsedJokerInGrowingPeriod {
    if (!('growingPeriodStart' in value) || value['growingPeriodStart'] === undefined) return false;
    if (!('growingPeriodEnd' in value) || value['growingPeriodEnd'] === undefined) return false;
    if (!('numberOfUsedJokers' in value) || value['numberOfUsedJokers'] === undefined) return false;
    return true;
}

export function UsedJokerInGrowingPeriodFromJSON(json: any): UsedJokerInGrowingPeriod {
    return UsedJokerInGrowingPeriodFromJSONTyped(json, false);
}

export function UsedJokerInGrowingPeriodFromJSONTyped(json: any, ignoreDiscriminator: boolean): UsedJokerInGrowingPeriod {
    if (json == null) {
        return json;
    }
    return {
        
        'growingPeriodStart': (new Date(json['growing_period_start'])),
        'growingPeriodEnd': (new Date(json['growing_period_end'])),
        'numberOfUsedJokers': json['number_of_used_jokers'],
    };
}

  export function UsedJokerInGrowingPeriodToJSON(json: any): UsedJokerInGrowingPeriod {
      return UsedJokerInGrowingPeriodToJSONTyped(json, false);
  }

  export function UsedJokerInGrowingPeriodToJSONTyped(value?: UsedJokerInGrowingPeriod | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'growing_period_start': ((value['growingPeriodStart']).toISOString().substring(0,10)),
        'growing_period_end': ((value['growingPeriodEnd']).toISOString().substring(0,10)),
        'number_of_used_jokers': value['numberOfUsedJokers'],
    };
}

