/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EmailConfiguration
 */
export interface EmailConfiguration {
    /**
     * 
     * @type {string}
     * @memberof EmailConfiguration
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof EmailConfiguration
     */
    readonly releasedDate: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof EmailConfiguration
     */
    readonly lastUpdatedDraftDate: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof EmailConfiguration
     */
    readonly canBeDeleted: boolean;
    /**
     * 
     * @type {Date}
     * @memberof EmailConfiguration
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof EmailConfiguration
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof EmailConfiguration
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof EmailConfiguration
     */
    description?: string | null;
}

/**
 * Check if a given object implements the EmailConfiguration interface.
 */
export function instanceOfEmailConfiguration(value: object): value is EmailConfiguration {
    if (!('releasedDate' in value) || value['releasedDate'] === undefined) return false;
    if (!('lastUpdatedDraftDate' in value) || value['lastUpdatedDraftDate'] === undefined) return false;
    if (!('canBeDeleted' in value) || value['canBeDeleted'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function EmailConfigurationFromJSON(json: any): EmailConfiguration {
    return EmailConfigurationFromJSONTyped(json, false);
}

export function EmailConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailConfiguration {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'releasedDate': (json['released_date'] == null ? null : new Date(json['released_date'])),
        'lastUpdatedDraftDate': (json['last_updated_draft_date'] == null ? null : new Date(json['last_updated_draft_date'])),
        'canBeDeleted': json['can_be_deleted'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

  export function EmailConfigurationToJSON(json: any): EmailConfiguration {
      return EmailConfigurationToJSONTyped(json, false);
  }

  export function EmailConfigurationToJSONTyped(value?: Omit<EmailConfiguration, 'released_date'|'last_updated_draft_date'|'can_be_deleted'|'created_at'|'updated_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
    };
}

