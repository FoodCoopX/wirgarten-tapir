/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { PreferredLanguageEnum } from "./PreferredLanguageEnum";
import {
  PreferredLanguageEnumFromJSON,
  PreferredLanguageEnumToJSON,
} from "./PreferredLanguageEnum";
import type { CoopShareTransactionCountry } from "./CoopShareTransactionCountry";
import {
  CoopShareTransactionCountryFromJSON,
  CoopShareTransactionCountryToJSON,
} from "./CoopShareTransactionCountry";

/**
 *
 * @export
 * @interface CoopShareTransaction
 */
export interface CoopShareTransaction {
  /**
   *
   * @type {string}
   * @memberof CoopShareTransaction
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof CoopShareTransaction
   */
  password: string;
  /**
   *
   * @type {Date}
   * @memberof CoopShareTransaction
   */
  lastLogin?: Date | null;
  /**
   * Legt fest, dass der Benutzer alle Berechtigungen hat, ohne diese einzeln zuweisen zu müssen.
   * @type {boolean}
   * @memberof CoopShareTransaction
   */
  isSuperuser?: boolean;
  /**
   * Erforderlich. 150 Zeichen oder weniger. Nur Buchstaben, Ziffern und @/./+/-/_.
   * @type {string}
   * @memberof CoopShareTransaction
   */
  username: string;
  /**
   * Legt fest, ob sich der Benutzer an der Administrationsseite anmelden kann.
   * @type {boolean}
   * @memberof CoopShareTransaction
   */
  isStaff?: boolean;
  /**
   * Legt fest, ob dieser Benutzer aktiv ist. Kann deaktiviert werden, anstatt Benutzer zu löschen.
   * @type {boolean}
   * @memberof CoopShareTransaction
   */
  isActive?: boolean;
  /**
   *
   * @type {Date}
   * @memberof CoopShareTransaction
   */
  dateJoined?: Date;
  /**
   *
   * @type {string}
   * @memberof CoopShareTransaction
   */
  keycloakId?: string | null;
  /**
   *
   * @type {string}
   * @memberof CoopShareTransaction
   */
  firstName: string;
  /**
   *
   * @type {string}
   * @memberof CoopShareTransaction
   */
  lastName: string;
  /**
   *
   * @type {string}
   * @memberof CoopShareTransaction
   */
  email?: string;
  /**
   *
   * @type {string}
   * @memberof CoopShareTransaction
   */
  phoneNumber?: string | null;
  /**
   *
   * @type {Date}
   * @memberof CoopShareTransaction
   */
  birthdate?: Date | null;
  /**
   *
   * @type {string}
   * @memberof CoopShareTransaction
   */
  street?: string;
  /**
   *
   * @type {string}
   * @memberof CoopShareTransaction
   */
  street2?: string;
  /**
   *
   * @type {string}
   * @memberof CoopShareTransaction
   */
  postcode?: string;
  /**
   *
   * @type {string}
   * @memberof CoopShareTransaction
   */
  city?: string;
  /**
   *
   * @type {CoopShareTransactionCountry}
   * @memberof CoopShareTransaction
   */
  country?: CoopShareTransactionCountry;
  /**
   *
   * @type {PreferredLanguageEnum}
   * @memberof CoopShareTransaction
   */
  preferredLanguage?: PreferredLanguageEnum;
  /**
   *
   * @type {string}
   * @memberof CoopShareTransaction
   */
  accountOwner?: string | null;
  /**
   *
   * @type {string}
   * @memberof CoopShareTransaction
   */
  iban?: string | null;
  /**
   *
   * @type {Date}
   * @memberof CoopShareTransaction
   */
  sepaConsent?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof CoopShareTransaction
   */
  withdrawalConsent?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof CoopShareTransaction
   */
  privacyConsent?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof CoopShareTransaction
   */
  readonly createdAt: Date;
  /**
   *
   * @type {number}
   * @memberof CoopShareTransaction
   */
  memberNo?: number | null;
  /**
   *
   * @type {boolean}
   * @memberof CoopShareTransaction
   */
  isStudent?: boolean;
  /**
   * Die Gruppen, denen der Benutzer angehört. Ein Benutzer bekommt alle Berechtigungen dieser Gruppen.
   * @type {Array<number>}
   * @memberof CoopShareTransaction
   */
  groups?: Array<number>;
  /**
   * Spezifische Berechtigungen für diesen Benutzer.
   * @type {Array<number>}
   * @memberof CoopShareTransaction
   */
  userPermissions?: Array<number>;
}

/**
 * Check if a given object implements the CoopShareTransaction interface.
 */
export function instanceOfCoopShareTransaction(
  value: object,
): value is CoopShareTransaction {
  if (!("password" in value) || value["password"] === undefined) return false;
  if (!("username" in value) || value["username"] === undefined) return false;
  if (!("firstName" in value) || value["firstName"] === undefined) return false;
  if (!("lastName" in value) || value["lastName"] === undefined) return false;
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
  return true;
}

export function CoopShareTransactionFromJSON(json: any): CoopShareTransaction {
  return CoopShareTransactionFromJSONTyped(json, false);
}

export function CoopShareTransactionFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CoopShareTransaction {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    password: json["password"],
    lastLogin:
      json["last_login"] == null ? undefined : new Date(json["last_login"]),
    isSuperuser:
      json["is_superuser"] == null ? undefined : json["is_superuser"],
    username: json["username"],
    isStaff: json["is_staff"] == null ? undefined : json["is_staff"],
    isActive: json["is_active"] == null ? undefined : json["is_active"],
    dateJoined:
      json["date_joined"] == null ? undefined : new Date(json["date_joined"]),
    keycloakId: json["keycloak_id"] == null ? undefined : json["keycloak_id"],
    firstName: json["first_name"],
    lastName: json["last_name"],
    email: json["email"] == null ? undefined : json["email"],
    phoneNumber:
      json["phone_number"] == null ? undefined : json["phone_number"],
    birthdate:
      json["birthdate"] == null ? undefined : new Date(json["birthdate"]),
    street: json["street"] == null ? undefined : json["street"],
    street2: json["street_2"] == null ? undefined : json["street_2"],
    postcode: json["postcode"] == null ? undefined : json["postcode"],
    city: json["city"] == null ? undefined : json["city"],
    country:
      json["country"] == null
        ? undefined
        : CoopShareTransactionCountryFromJSON(json["country"]),
    preferredLanguage:
      json["preferred_language"] == null
        ? undefined
        : PreferredLanguageEnumFromJSON(json["preferred_language"]),
    accountOwner:
      json["account_owner"] == null ? undefined : json["account_owner"],
    iban: json["iban"] == null ? undefined : json["iban"],
    sepaConsent:
      json["sepa_consent"] == null ? undefined : new Date(json["sepa_consent"]),
    withdrawalConsent:
      json["withdrawal_consent"] == null
        ? undefined
        : new Date(json["withdrawal_consent"]),
    privacyConsent:
      json["privacy_consent"] == null
        ? undefined
        : new Date(json["privacy_consent"]),
    createdAt: new Date(json["created_at"]),
    memberNo: json["member_no"] == null ? undefined : json["member_no"],
    isStudent: json["is_student"] == null ? undefined : json["is_student"],
    groups: json["groups"] == null ? undefined : json["groups"],
    userPermissions:
      json["user_permissions"] == null ? undefined : json["user_permissions"],
  };
}

export function CoopShareTransactionToJSON(json: any): CoopShareTransaction {
  return CoopShareTransactionToJSONTyped(json, false);
}

export function CoopShareTransactionToJSONTyped(
  value?: Omit<CoopShareTransaction, "created_at"> | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    password: value["password"],
    last_login:
      value["lastLogin"] == null
        ? undefined
        : (value["lastLogin"] as any).toISOString(),
    is_superuser: value["isSuperuser"],
    username: value["username"],
    is_staff: value["isStaff"],
    is_active: value["isActive"],
    date_joined:
      value["dateJoined"] == null
        ? undefined
        : value["dateJoined"].toISOString(),
    keycloak_id: value["keycloakId"],
    first_name: value["firstName"],
    last_name: value["lastName"],
    email: value["email"],
    phone_number: value["phoneNumber"],
    birthdate:
      value["birthdate"] == null
        ? undefined
        : (value["birthdate"] as any).toISOString().substring(0, 10),
    street: value["street"],
    street_2: value["street2"],
    postcode: value["postcode"],
    city: value["city"],
    country: CoopShareTransactionCountryToJSON(value["country"]),
    preferred_language: PreferredLanguageEnumToJSON(value["preferredLanguage"]),
    account_owner: value["accountOwner"],
    iban: value["iban"],
    sepa_consent:
      value["sepaConsent"] == null
        ? undefined
        : (value["sepaConsent"] as any).toISOString(),
    withdrawal_consent:
      value["withdrawalConsent"] == null
        ? undefined
        : (value["withdrawalConsent"] as any).toISOString(),
    privacy_consent:
      value["privacyConsent"] == null
        ? undefined
        : (value["privacyConsent"] as any).toISOString(),
    member_no: value["memberNo"],
    is_student: value["isStudent"],
    groups: value["groups"],
    user_permissions: value["userPermissions"],
  };
}
