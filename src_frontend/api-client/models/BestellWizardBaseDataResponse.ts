/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PublicProductType } from './PublicProductType';
import {
    PublicProductTypeFromJSON,
    PublicProductTypeFromJSONTyped,
    PublicProductTypeToJSON,
    PublicProductTypeToJSONTyped,
} from './PublicProductType';

/**
 * 
 * @export
 * @interface BestellWizardBaseDataResponse
 */
export interface BestellWizardBaseDataResponse {
    /**
     * 
     * @type {number}
     * @memberof BestellWizardBaseDataResponse
     */
    priceOfAShare: number;
    /**
     * 
     * @type {string}
     * @memberof BestellWizardBaseDataResponse
     */
    theme: string;
    /**
     * 
     * @type {boolean}
     * @memberof BestellWizardBaseDataResponse
     */
    allowInvestingMembership: boolean;
    /**
     * 
     * @type {Array<PublicProductType>}
     * @memberof BestellWizardBaseDataResponse
     */
    productTypes: Array<PublicProductType>;
    /**
     * 
     * @type {boolean}
     * @memberof BestellWizardBaseDataResponse
     */
    forceWaitingList: boolean;
}

/**
 * Check if a given object implements the BestellWizardBaseDataResponse interface.
 */
export function instanceOfBestellWizardBaseDataResponse(value: object): value is BestellWizardBaseDataResponse {
    if (!('priceOfAShare' in value) || value['priceOfAShare'] === undefined) return false;
    if (!('theme' in value) || value['theme'] === undefined) return false;
    if (!('allowInvestingMembership' in value) || value['allowInvestingMembership'] === undefined) return false;
    if (!('productTypes' in value) || value['productTypes'] === undefined) return false;
    if (!('forceWaitingList' in value) || value['forceWaitingList'] === undefined) return false;
    return true;
}

export function BestellWizardBaseDataResponseFromJSON(json: any): BestellWizardBaseDataResponse {
    return BestellWizardBaseDataResponseFromJSONTyped(json, false);
}

export function BestellWizardBaseDataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BestellWizardBaseDataResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'priceOfAShare': json['price_of_a_share'],
        'theme': json['theme'],
        'allowInvestingMembership': json['allow_investing_membership'],
        'productTypes': ((json['product_types'] as Array<any>).map(PublicProductTypeFromJSON)),
        'forceWaitingList': json['force_waiting_list'],
    };
}

  export function BestellWizardBaseDataResponseToJSON(json: any): BestellWizardBaseDataResponse {
      return BestellWizardBaseDataResponseToJSONTyped(json, false);
  }

  export function BestellWizardBaseDataResponseToJSONTyped(value?: BestellWizardBaseDataResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'price_of_a_share': value['priceOfAShare'],
        'theme': value['theme'],
        'allow_investing_membership': value['allowInvestingMembership'],
        'product_types': ((value['productTypes'] as Array<any>).map(PublicProductTypeToJSON)),
        'force_waiting_list': value['forceWaitingList'],
    };
}

